@model NhaTroAnCu.Models.ContractEditViewModel

@{
    ViewBag.Title = "Sửa hợp đồng";
}

<div class="edit-contract-container">
    <div class="page-header">
        <h2><i class="fas fa-edit"></i> Sửa hợp đồng thuê phòng</h2>
    </div>

    @using (Html.BeginForm("Edit", "Contracts", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)

        <!-- Thông tin hợp đồng -->
        <div class="edit-card">
            <div class="section-title">
                <i class="fas fa-file-contract"></i>
                Thông tin hợp đồng
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label><i class="fas fa-door-open"></i> Phòng</label>
                    @Html.HiddenFor(m => m.RoomId)
                    @Html.DropDownListFor(m => m.RoomId, (SelectList)ViewBag.RoomList, "Chọn phòng", new { @class = "form-control readonly-field", disabled = "disabled" })
                    <small class="text-muted"><i class="fas fa-lock"></i> Không thể thay đổi phòng khi sửa hợp đồng</small>
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fas fa-calendar-alt"></i> Ngày bắt đầu</label>
                    @Html.TextBoxFor(m => m.MoveInDate, "{0:dd/MM/yyyy}", new { @class = "form-control readonly-field", @readonly = "readonly" })
                    <small class="text-muted"><i class="fas fa-lock"></i> Không thể thay đổi</small>
                </div>
                <div class="form-group col-md-3">
                    <label><i class="fas fa-clock"></i> Số tháng thuê</label>
                    @Html.TextBoxFor(m => m.Months, new { @class = "form-control", type = "number", min = 1 })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label><i class="fas fa-money-bill-wave"></i> Giá thương lượng</label>
                    @Html.TextBoxFor(m => m.PriceAgreed, new { @class = "form-control money" })
                </div>
                <div class="form-group col-md-6">
                    <label><i class="fas fa-piggy-bank"></i> Tiền đặt cọc</label>
                    @Html.TextBoxFor(m => m.DepositAmount, new { @class = "form-control money" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label><i class="fas fa-bolt"></i> Giá điện (VNĐ/kWh)</label>
                    @Html.TextBoxFor(m => m.ElectricityPrice, new { @class = "form-control money" })
                </div>
                <div class="form-group col-md-6">
                    <label><i class="fas fa-tint"></i> Giá nước (VNĐ/m³)</label>
                    @Html.TextBoxFor(m => m.WaterPrice, new { @class = "form-control money" })
                </div>
            </div>
        </div>

        <!-- Thông tin người thuê -->
        <div class="edit-card">
            <div class="section-title">
                <i class="fas fa-users"></i>
                Thông tin người thuê
            </div>

            <div id="tenantList">
                @for (int i = 0; i < Model.Tenants.Count; i++)
                {
                    <div class="tenant-card">
                        @Html.HiddenFor(m => m.Tenants[i].Id)
                        <div class="tenant-card-header">
                            <span><i class="fas fa-user"></i> Người thuê #@(i + 1)</span>
                            @if (Model.Tenants.Count > 1)
                            {
                                <button type="button" class="remove-tenant">
                                    <i class="fas fa-trash"></i> Xóa
                                </button>
                            }
                        </div>
                        <div class="tenant-card-body">
                            <div class="photo-section">
                                <!-- Ảnh hiện tại -->
                                @if (!string.IsNullOrEmpty(Model.Tenants[i].Photo))
                                {
                                    <div class="current-photos">
                                        <h6><i class="fas fa-images"></i> Giấy tờ hiện tại - @Model.Tenants[i].FullName</h6>
                                        <div class="photo-grid">
                                            @{
                                                var photos = Model.Tenants[i].Photo.Split(';');
                                                var tenantIndex = i;
                                                foreach (var photo in photos.Where(p => !string.IsNullOrWhiteSpace(p)))
                                                {
                                                    <div class="photo-thumbnail" onclick="showPhotoModal('@photo', @tenantIndex)">
                                                        <img src="@Url.Content(photo)" alt="Giấy tờ người thuê @(tenantIndex + 1)" />
                                                    </div>
                                                }
                                            }
                                        </div>
                                        <small class="text-muted">
                                            <i class="fas fa-info-circle"></i> Click vào ảnh để xem chi tiết. Chọn file mới sẽ thay thế tất cả ảnh hiện tại.
                                        </small>
                                    </div>
                                }
                                else
                                {
                                    <div class="no-photo">
                                        <i class="fas fa-image"></i>
                                        <p>Chưa có giấy tờ</p>
                                    </div>
                                }

                                <!-- Upload ảnh mới -->
                                <div class="upload-section">
                                    <h6 style="font-size: 16px; font-weight: 600; margin-bottom: 15px;">
                                        <i class="fas fa-upload"></i> Upload giấy tờ mới
                                    </h6>
                                    <label for="inputFile@(i)" class="btn-upload">
                                        <i class="fas fa-cloud-upload-alt"></i>
                                        Chọn file (có thể chọn nhiều)
                                    </label>
                                    <input type="file" id="inputFile@(i)" name="TenantPhotos" accept=".jpg,.jpeg,.png" style="display: none;" multiple />

                                    <div id="fileInfo@(i)" class="file-info" style="display: none;">
                                        <i class="fas fa-file-image"></i>
                                        <span id="fileCount@(i)">0</span> file đã chọn
                                    </div>

                                    <div id="fileList@(i)" class="file-list"></div>

                                    <button type="button" id="btn@(i)" name="uploadButton" class="btn btn-primary btn-sm mt-3">
                                        <i class="fas fa-id-card-alt"></i> Quét thông tin
                                    </button>

                                    <div id="loading@(i)" style="display:none;" class="mt-2">
                                        <i class="fas fa-spinner loading-spinner"></i> Đang xử lý...
                                    </div>
                                    <div id="results@(i)"></div>
                                </div>
                            </div>

                            <!-- Thông tin cá nhân -->
                            <div class="form-row mt-4">
                                <div class="form-group col-md-6">
                                    <label><i class="fas fa-signature"></i> Họ tên</label>
                                    @Html.TextBoxFor(m => m.Tenants[i].FullName, new { @class = "form-control", required = "required" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label><i class="fas fa-id-card"></i> Số CCCD</label>
                                    @Html.TextBoxFor(m => m.Tenants[i].IdentityCard, new { @class = "form-control", required = "required" })
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group col-md-4">
                                    <label><i class="fas fa-phone"></i> Điện thoại</label>
                                    @Html.TextBoxFor(m => m.Tenants[i].PhoneNumber, new { @class = "form-control" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label><i class="fas fa-birthday-cake"></i> Ngày sinh</label>
                                    @Html.TextBoxFor(m => m.Tenants[i].BirthDate, "{0:dd/MM/yyyy}", new { @class = "form-control datepicker" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label><i class="fas fa-venus-mars"></i> Giới tính</label>
                                    @Html.DropDownListFor(m => m.Tenants[i].Gender,
                                        new SelectList(new[] { "Nam", "Nữ", "Khác" }, Model.Tenants[i].Gender),
                                        "Chọn giới tính", new { @class = "form-control" })
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label><i class="fas fa-users"></i> Dân tộc</label>
                                    @Html.TextBoxFor(m => m.Tenants[i].Ethnicity, new { @class = "form-control" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label><i class="fas fa-motorcycle"></i> Biển số xe</label>
                                    @Html.TextBoxFor(m => m.Tenants[i].VehiclePlate, new { @class = "form-control", placeholder = "VD: 15H1-12345" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label><i class="fas fa-home"></i> Nơi thường trú</label>
                                @Html.TextBoxFor(m => m.Tenants[i].PermanentAddress, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="action-buttons">
                <button type="button" class="btn btn-outline-secondary btn-custom" onclick="addTenant()">
                    <i class="fas fa-plus"></i> Thêm người thuê
                </button>
                <button type="submit" class="btn btn-primary btn-custom">
                    <i class="fas fa-save"></i> Lưu thay đổi
                </button>
                @Html.ActionLink("Quay lại", "Index", "Rooms", null, new { @class = "btn btn-outline-secondary btn-custom" })
            </div>
        </div>
    }
</div>

<!-- Modal hiển thị ảnh -->
<div class="modal fade" id="photoModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="photoModalTitle">Xem giấy tờ</h5>
                <button type="button" class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body text-center">
                <img id="modalPhoto" src="" style="max-width: 100%; height: auto;" />
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Hiển thị modal ảnh
        function showPhotoModal(photoUrl, tenantIndex) {
            $('#modalPhoto').attr('src', photoUrl);
            $('#photoModalTitle').text('Giấy tờ - Người thuê #' + (tenantIndex + 1));
            $('#photoModal').modal('show');
        }

        // Xử lý chọn file
        $(document).on('change', 'input[type="file"][name="TenantPhotos"]', function() {
            var index = this.id.replace("inputFile", "");
            var files = this.files;
            var fileInfo = $("#fileInfo" + index);
            var fileList = $("#fileList" + index);

            fileList.empty();

            if (files && files.length > 0) {
                fileInfo.show();
                $("#fileCount" + index).text(files.length);

                for (let i = 0; i < files.length; i++) {
                    var fileSize = (files[i].size / 1024).toFixed(2) + " KB";
                    fileList.append(`
                        <div class="file-item">
                            <span><i class="fas fa-file-image"></i> ${files[i].name} (${fileSize})</span>
                            <button type="button" onclick="alert('Không thể xóa file riêng lẻ. Vui lòng chọn lại.')">×</button>
                        </div>
                    `);
                }
            } else {
                fileInfo.hide();
            }
        });

        // Thêm người thuê mới
        function addTenant() {
            const index = $('#tenantList .tenant-card').length;
            const html = `
                <div class="tenant-card">
                    <input type="hidden" name="Tenants[${index}].Id" value="0" />
                    <div class="tenant-card-header">
                        <span><i class="fas fa-user"></i> Người thuê #${index + 1}</span>
                        <button type="button" class="remove-tenant">
                            <i class="fas fa-trash"></i> Xóa
                        </button>
                    </div>
                    <div class="tenant-card-body">
                        <div class="photo-section">
                            <div class="no-photo">
                                <i class="fas fa-image"></i>
                                <p>Người thuê mới - chưa có giấy tờ</p>
                            </div>

                            <div class="upload-section">
                                <h6 style="font-size: 16px; font-weight: 600; margin-bottom: 15px;">
                                    <i class="fas fa-upload"></i> Upload giấy tờ
                                </h6>
                                <label for="inputFile${index}" class="btn-upload">
                                    <i class="fas fa-cloud-upload-alt"></i>
                                    Chọn file (có thể chọn nhiều)
                                </label>
                                <input type="file" id="inputFile${index}" name="TenantPhotos" accept=".jpg,.jpeg,.png" style="display: none;" multiple />

                                <div id="fileInfo${index}" class="file-info" style="display: none;">
                                    <i class="fas fa-file-image"></i>
                                    <span id="fileCount${index}">0</span> file đã chọn
                                </div>

                                <div id="fileList${index}" class="file-list"></div>

                                <button type="button" id="btn${index}" name="uploadButton" class="btn btn-primary btn-sm mt-3">
                                    <i class="fas fa-id-card-alt"></i> Quét thông tin
                                </button>

                                <div id="loading${index}" style="display:none;" class="mt-2">
                                    <i class="fas fa-spinner loading-spinner"></i> Đang xử lý...
                                </div>
                                <div id="results${index}"></div>
                            </div>
                        </div>

                        <div class="form-row mt-4">
                            <div class="form-group col-md-6">
                                <label><i class="fas fa-signature"></i> Họ tên</label>
                                <input name="Tenants[${index}].FullName" class="form-control" required="required" />
                            </div>
                            <div class="form-group col-md-6">
                                <label><i class="fas fa-id-card"></i> Số CCCD</label>
                                <input name="Tenants[${index}].IdentityCard" class="form-control" required="required" />
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-4">
                                <label><i class="fas fa-phone"></i> Điện thoại</label>
                                <input name="Tenants[${index}].PhoneNumber" class="form-control" />
                            </div>
                            <div class="form-group col-md-4">
                                <label><i class="fas fa-birthday-cake"></i> Ngày sinh</label>
                                <input name="Tenants[${index}].BirthDate" class="form-control datepicker" placeholder="dd/MM/yyyy" />
                            </div>
                            <div class="form-group col-md-4">
                                <label><i class="fas fa-venus-mars"></i> Giới tính</label>
                                <select name="Tenants[${index}].Gender" class="form-control">
                                    <option value="">Chọn giới tính</option>
                                    <option value="Nam">Nam</option>
                                    <option value="Nữ">Nữ</option>
                                    <option value="Khác">Khác</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label><i class="fas fa-users"></i> Dân tộc</label>
                                <input name="Tenants[${index}].Ethnicity" class="form-control" />
                            </div>
                            <div class="form-group col-md-6">
                                <label><i class="fas fa-motorcycle"></i> Biển số xe</label>
                                <input name="Tenants[${index}].VehiclePlate" class="form-control" placeholder="VD: 15H1-12345" />
                            </div>
                        </div>

                        <div class="form-group">
                            <label><i class="fas fa-home"></i> Nơi thường trú</label>
                            <input name="Tenants[${index}].PermanentAddress" class="form-control" />
                        </div>
                    </div>
                </div>
            `;

            $('#tenantList').append(html);
            updateTenantNumbers();

            // Khởi tạo datepicker cho tenant mới
            $(`input[name="Tenants[${index}].BirthDate"]`).datepicker({
                format: "dd/mm/yyyy",
                autoclose: true,
                todayHighlight: true
            });

            // Khởi tạo event handler cho nút quét
            AddEventReadCCCD(document.getElementById("btn" + index));
        }

        // Cập nhật số thứ tự
        function updateTenantNumbers() {
            $('#tenantList .tenant-card').each(function(index) {
                $(this).find('.tenant-card-header span').html(`<i class="fas fa-user"></i> Người thuê #${index + 1}`);
            });
        }

        // Xóa người thuê
        $(document).on('click', '.remove-tenant', function() {
            $(this).closest('.tenant-card').remove();
            updateTenantNumbers();

            // Re-index tất cả input
            $('#tenantList .tenant-card').each(function(idx) {
                $(this).find('input, select').each(function() {
                    var name = $(this).attr('name');
                    if (name) {
                        var newName = name.replace(/Tenants\[\d+\]/, 'Tenants[' + idx + ']');
                        $(this).attr('name', newName);
                    }
                });

                // Update IDs
                $(this).find('input[type="file"]').each(function() {
                    var oldId = $(this).attr('id');
                    if (oldId) {
                        var newId = 'inputFile' + idx;
                        $(this).attr('id', newId);
                        $(this).siblings('label').attr('for', newId);
                    }
                });

                $(this).find('[id^="fileInfo"], [id^="fileCount"], [id^="fileList"], [id^="btn"], [id^="loading"], [id^="results"]').each(function() {
                    var oldId = $(this).attr('id');
                    if (oldId) {
                        var prefix = oldId.replace(/\d+$/, '');
                        $(this).attr('id', prefix + idx);
                    }
                });
            });
        });

        // API Read CCCD
        const elements = document.getElementsByName('uploadButton');
        for (const element of elements) {
            AddEventReadCCCD(element);
        }

        function AddEventReadCCCD(element) {
            element.addEventListener('click', function() {
                var index = this.id.replace("btn", "");
                var fileInput = document.getElementById("inputFile" + index);
                var files = fileInput.files;

                if (!files || files.length === 0) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Chưa chọn file',
                        text: 'Vui lòng chọn ít nhất một file giấy tờ trước khi quét.',
                        confirmButtonText: 'Đã hiểu',
                        confirmButtonColor: '#667eea'
                    });
                    return;
                }

                var formData = new FormData();
                for (let i = 0; i < files.length; i++) {
                    formData.append("inputFiles", files[i]);
                }

                var xhr = new XMLHttpRequest();
                xhr.open("POST", "@Url.Action("ReadCCCD", "CardReader")", true);

                xhr.onload = function() {
                    document.getElementById("loading" + index).style.display = "none";
                    if (xhr.status >= 200 && xhr.status < 300) {
                        try {
                            var response = JSON.parse(xhr.responseText);
                            if (response.success) {
                                if (response.data) {
                                    displayResults(response.data, index);
                                }
                            } else {
                                document.getElementById("results" + index).innerHTML =
                                    `<div class='scan-result error'>
                                        <i class='fas fa-exclamation-triangle'></i> ${response.message}
                                    </div>`;
                            }
                        } catch (e) {
                            document.getElementById("results" + index).innerHTML =
                                `<div class='scan-result error'>
                                    <i class='fas fa-exclamation-triangle'></i> Lỗi xử lý: ${e.message}
                                </div>`;
                        }
                    }
                };

                xhr.onerror = function() {
                    document.getElementById("loading" + index).style.display = "none";
                    document.getElementById("results" + index).innerHTML =
                        `<div class='scan-result error'>
                            <i class='fas fa-exclamation-triangle'></i> Lỗi kết nối mạng
                        </div>`;
                };

                document.getElementById("loading" + index).style.display = "block";
                document.getElementById("results" + index).innerHTML = "";
                xhr.send(formData);
            });
        }

        function displayResults(apiResponse, pos) {
            var resultsDiv = $("#results" + pos);
            resultsDiv.empty();

            if (apiResponse.errorCode === 0 && apiResponse.data && apiResponse.data.length > 0) {
                var message = apiResponse.errorMessage || "";
                var scanClass = "success";

                if (message.includes("Chưa có mặt trước") || message.includes("Chưa có mặt sau")) {
                    scanClass = "partial";
                }

                resultsDiv.html(`
                    <div class='scan-result ${scanClass}'>
                        <i class='fas fa-check-circle'></i> Đã quét thông tin từ giấy tờ!
                        ${message ? `<br><small>${message}</small>` : ''}
                    </div>
                `);

                // Điền thông tin
                $.each(apiResponse.data, function(i, cardData) {
                    if (cardData.id) {
                        $(`#Tenants_${pos}__IdentityCard`).val(cardData.id);
                    }
                    if (cardData.name) {
                        $(`#Tenants_${pos}__FullName`).val(cardData.name);
                    }
                    if (cardData.dob) {
                        let dob = cardData.dob.trim();
                        if (/^\d{4}-\d{2}-\d{2}$/.test(dob)) {
                            let parts = dob.split("-");
                            dob = parts[2] + "/" + parts[1] + "/" + parts[0];
                        }
                        $(`#Tenants_${pos}__BirthDate`).datepicker('update', dob);
                        $(`#Tenants_${pos}__BirthDate`).val(dob);
                    }
                    if (cardData.sex) {
                        if (cardData.sex === "NỮ") {
                            $(`#Tenants_${pos}__Gender`).val("Nữ");
                        } else if (cardData.sex === "NAM") {
                            $(`#Tenants_${pos}__Gender`).val("Nam");
                        }
                    }
                    if (cardData.address && cardData.address !== "N/A") {
                        $(`#Tenants_${pos}__PermanentAddress`).val(cardData.address);
                    }
                    if (cardData.ethnicity) {
                        $(`#Tenants_${pos}__Ethnicity`).val(cardData.ethnicity);
                    }
                });
            } else {
                resultsDiv.html(`
                    <div class='scan-result error'>
                        <i class='fas fa-info-circle'></i> Không tìm thấy dữ liệu
                    </div>
                `);
            }
        }

        // Khởi tạo khi trang load
        $(document).ready(function() {
            // Datepicker
            $('.datepicker').datepicker({
                format: "dd/mm/yyyy",
                autoclose: true,
                todayHighlight: true
            });

            // Animation cho cards
            $('.edit-card').each(function(i) {
                $(this).css('opacity', '0');
                $(this).css('transform', 'translateY(20px)');
                setTimeout(() => {
                    $(this).css('transition', 'all 0.5s ease');
                    $(this).css('opacity', '1');
                    $(this).css('transform', 'translateY(0)');
                }, i * 100);
            });
        });
    </script>
}