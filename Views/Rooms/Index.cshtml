@model IEnumerable<NhaTroAnCu.Models.RoomViewModel>
@{
    ViewBag.Title = "Quản lý phòng trọ";
    var grouped = Model.GroupBy(r => r.Room.Area).OrderBy(g => g.Key);
    int selectedDay = ViewBag.SelectedDay;
    int selectedMonth = ViewBag.SelectedMonth;
    int selectedYear = ViewBag.SelectedYear;
}
<link href="~/Content/roomsindex.css" rel="stylesheet" />

<div class="dashboard-header">
    <h1 class="dashboard-title">
        <i class="fas fa-building"></i>
        Quản lý phòng trọ An Cư
    </h1>
    <p class="text-center text-muted">Hệ thống quản lý hiện đại và chuyên nghiệp</p>
</div>

<!-- Filter Card -->
<div class="filter-card">
    <h3 class="filter-title">
        <i class="fas fa-calendar-alt"></i>
        Lọc theo thời gian
    </h3>

    <form id="filterForm" method="get">
        <div class="row">
            <div class="col-md-2">
                <label class="form-label font-weight-bold">Ngày:</label>
                <input type="number" id="dayInput" name="day" class="form-control date-input"
                       min="1" max="31" value="@selectedDay" />
            </div>
            <div class="col-md-8">
                <label class="form-label font-weight-bold">Tháng:</label>
                <div class="month-selector" style="margin: 0;">
                    @for (int m = 1; m <= 12; m++)
                    {
                        var css = m == selectedMonth ? "month-btn month-selected" : "month-btn";
                        <div class="@css" data-month="@m">Tháng @m</div>
                    }
                </div>
            </div>
            <div class="col-md-2">
                <label class="form-label font-weight-bold">Năm:</label>
                <input type="number" id="yearInput" name="year" class="form-control date-input"
                       min="2000" max="2100" value="@selectedYear" />
            </div>
        </div>
        <input type="hidden" id="monthInput" name="month" value="@selectedMonth" />
    </form>
</div>

<!-- Summary Dashboard -->
@{
    Html.RenderAction("_MonthSummary", "ReportSummary", new { month = ViewBag.SelectedMonth, year = ViewBag.SelectedYear });
}

<!-- Rooms Display -->
@foreach (var areaGroup in grouped)
{
    <div class="area-section">
        <h2 class="area-title">
            <i class="fas fa-map-marker-alt"></i>
            DÃY @areaGroup.Key
        </h2>

        @for (int floor = 0; floor <= 3; floor++)
        {
            var floorRooms = areaGroup.Where(r => r.Room.Floor == floor).OrderBy(r => r.Room.RoomNumber);
            if (floorRooms.Any())
            {
                <div class="floor-section">
                    <h4 class="floor-title">
                        <i class="fas fa-layer-group"></i>
                        Tầng @floor
                    </h4>

                    <div class="room-grid">
                        @foreach (var vm in floorRooms)
                        {
                            var roomClass = vm.ColorClass == "gray" ? "room-available"
                                          : vm.ColorClass == "green" ? "room-paid"
                                          : vm.ColorClass == "yellow" ? "room-partial"
                                          : vm.ColorClass == "expired" ? "room-expired"  // Thêm class mới cho phòng hết hạn
                                          : "room-unpaid";

                            <div class="room-card @roomClass">

                                @if (vm.IsContractExpired && vm.ContractEndDate.HasValue)
                                {
                                    <!-- Hiển thị cảnh báo đã hết hạn hợp đồng -->
                                    <div class="contract-expired-warning">
                                        <i class="fas fa-exclamation-circle"></i>
                                        Đã hết hạn
                                    </div>
                                }
                                else if (vm.IsContractNearingEnd && vm.ContractEndDate.HasValue)
                                {
                                    <div class="contract-warning">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        Sắp hết hạn
                                    </div>
                                }

                                @Html.ActionLink(" ", "Edit", new { id = vm.Room.Id }, new
                                {
                                    @class = "edit-icon fas fa-edit",
                                    title = "Chỉnh sửa phòng"
                                })

                                @Html.ActionLink(" ", "history", "contracts", new { id = vm.Room.Id }, new
                                {
                                    @class = "history-icon fas fa-history",
                                    title = "Lịch sử thuê phòng"
                                })

                                <div class="room-number">
                                    <i class="fas fa-door-open"></i>
                                    @vm.Room.Name
                                </div>

                                <div class="room-tenant">
                                    @if (vm.Room.IsOccupied)
                                    {
                                        if (!string.IsNullOrEmpty(vm.TenantName))
                                        {
                                            <i class="fas fa-user"></i>
                                            @vm.TenantName
                                        }
                                        else
                                        {
                                            <i class="fas fa-user-slash"></i>
                                            <span>Chưa có thông tin</span>

                                        }
                                    }
                                    else
                                    {
                                        <i class="fas fa-home"></i>
                                        <span>Phòng trống</span>
                                    }
                                </div>

                                <div class="room-actions">
                                    @if (vm.Room.IsOccupied)
                                    {
                                        <a href="@Url.Action("Details", "Rooms", new { id = vm.Room.Id })"
                                           class="btn-room">
                                            <i class="fas fa-info-circle"></i>
                                            Chi tiết
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("Create", "Contracts", new { roomId = vm.Room.Id })"
                                           class="btn-room">
                                            <i class="fas fa-plus-circle"></i>
                                            Cho thuê
                                        </a>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
    </div>
}

<script>
    // Month selector functionality
    document.querySelectorAll('.month-btn').forEach(function (btn) {
        btn.addEventListener('click', function () {
            var month = parseInt(btn.getAttribute('data-month'));
            var year = parseInt(document.getElementById('yearInput').value);
            var lastDay = new Date(year, month, 0).getDate();

            document.getElementById('monthInput').value = month;
            document.getElementById('dayInput').value = lastDay;

            // Update UI
            document.querySelectorAll('.month-btn').forEach(b => b.classList.remove('month-selected'));
            btn.classList.add('month-selected');

            // Submit form
            document.getElementById('filterForm').submit();
        });
    });

    // Auto submit on input change
    document.getElementById('dayInput').addEventListener('change', function () {
        document.getElementById('filterForm').submit();
    });

    document.getElementById('yearInput').addEventListener('change', function () {
        var month = parseInt(document.getElementById('monthInput').value);
        var year = parseInt(this.value);
        var lastDay = new Date(year, month, 0).getDate();
        var currentDay = parseInt(document.getElementById('dayInput').value);

        if (currentDay > lastDay) {
            document.getElementById('dayInput').value = lastDay;
        }
        document.getElementById('filterForm').submit();
    });

    // Add smooth animations on page load
    document.addEventListener('DOMContentLoaded', function () {
        const cards = document.querySelectorAll('.room-card, .summary-card, .area-section');
        cards.forEach((card, index) => {
            card.style.opacity = '0';
            card.style.transform = 'translateY(20px)';
            setTimeout(() => {
                card.style.transition = 'all 0.6s ease';
                card.style.opacity = '1';
                card.style.transform = 'translateY(0)';
            }, index * 100);
        });
    });
</script>