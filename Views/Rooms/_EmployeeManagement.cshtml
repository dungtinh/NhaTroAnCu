@model NhaTroAnCu.Models.RoomTenantManagementViewModel
@using System.Web.Mvc

<style>
    .employee-management-section {
        background: white;
        padding: 25px;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        margin-top: 20px;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid #667eea;
    }

    .section-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2c3e50;
    }

    .company-badge {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 0.9rem;
    }

    .employee-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .employee-card {
        border: 1px solid #e9ecef;
        border-radius: 10px;
        padding: 15px;
        position: relative;
        transition: all 0.3s;
    }

        .employee-card:hover {
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transform: translateY(-2px);
        }

    .employee-photo {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        background: #f0f0f0;
        display: flex;
        align-items: center;
        justify-content: center;
        float: left;
        margin-right: 15px;
    }

    .employee-info {
        overflow: hidden;
    }

    .employee-name {
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 5px;
    }

    .employee-details {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .employee-actions {
        position: absolute;
        top: 10px;
        right: 10px;
    }

    .btn-remove {
        background: #dc3545;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 5px;
        font-size: 0.8rem;
        cursor: pointer;
    }

        .btn-remove:hover {
            background: #c82333;
        }

    .add-employee-form {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        margin-top: 20px;
    }

    .form-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 15px;
        margin-bottom: 20px;
    }

    .btn-add-employee {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        padding: 10px 30px;
        border: none;
        border-radius: 25px;
        cursor: pointer;
        font-weight: 600;
    }

        .btn-add-employee:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.3);
        }

    .empty-state {
        text-align: center;
        padding: 40px;
        color: #6c757d;
    }

        .empty-state i {
            font-size: 3rem;
            margin-bottom: 15px;
            opacity: 0.5;
        }
</style>

<div class="employee-management-section">
    <div class="section-header">
        <h3 class="section-title">
            <i class="fas fa-users"></i> Quản lý nhân viên trong phòng
        </h3>
        @if (!string.IsNullOrEmpty(Model.CompanyName))
        {
            <span class="company-badge">
                <i class="fas fa-building"></i> @Model.CompanyName
            </span>
        }
    </div>

    @if (Model.ContractType == "Company")
    {
        <!-- Danh sách nhân viên hiện tại -->
        <div class="current-employees">
            <h5 style="margin-bottom: 20px;">
                Nhân viên hiện tại
                <span class="badge badge-primary">@Model.CurrentEmployees.Count người</span>
            </h5>

            @if (Model.CurrentEmployees.Any())
            {
                <div class="employee-grid">
                    @foreach (var employee in Model.CurrentEmployees)
                    {
                        <div class="employee-card">
                            <div class="employee-photo">
                                @if (!string.IsNullOrEmpty(employee.Photo))
                                {
                                    <img src="@employee.Photo" alt="@employee.FullName" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;" />
                                }
                                else
                                {
                                    <i class="fas fa-user fa-2x text-muted"></i>
                                }
                            </div>

                            <div class="employee-info">
                                <div class="employee-name">@employee.FullName</div>
                                <div class="employee-details">
                                    <i class="fas fa-id-card"></i> @employee.IdentityCard<br />
                                    @if (!string.IsNullOrEmpty(employee.PhoneNumber))
                                    {
                                        <i class="fas fa-phone"></i> @employee.PhoneNumber<br />
                                    }
                                    <i class="fas fa-calendar"></i> Vào: @employee.JoinDate.ToString("dd/MM/yyyy")
                                </div>
                            </div>

                            <div class="employee-actions">
                                <form action="@Url.Action("RemoveEmployee", "Rooms")" method="post" style="display: inline;"
                                      onsubmit="return confirm('Bạn có chắc muốn xóa nhân viên này khỏi phòng?');">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="roomId" value="@Model.RoomId" />
                                    <input type="hidden" name="tenantId" value="@employee.TenantId" />
                                    <button type="submit" class="btn-remove">
                                        <i class="fas fa-times"></i> Xóa
                                    </button>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <i class="fas fa-user-slash"></i>
                    <p>Chưa có nhân viên nào trong phòng này</p>
                </div>
            }
        </div>

        <!-- Form thêm nhân viên mới -->
        <div class="add-employee-form">
            <h5 style="margin-bottom: 20px;">
                <i class="fas fa-user-plus"></i> Thêm nhân viên mới
            </h5>

            @using (Html.BeginForm("AddEmployee", "Rooms", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="roomId" value="@Model.RoomId" />

                <div class="form-grid">
                    <div class="form-group">
                        <label>Họ và tên <span class="text-danger">*</span></label>
                        @Html.TextBoxFor(m => m.NewTenant.FullName, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        <label>Số CCCD/CMND <span class="text-danger">*</span></label>
                        @Html.TextBoxFor(m => m.NewTenant.IdentityCard, new { @class = "form-control", required = "required" })
                    </div>

                    <div class="form-group">
                        <label>Số điện thoại</label>
                        @Html.TextBoxFor(m => m.NewTenant.PhoneNumber, new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label>Ngày sinh</label>
                        @Html.TextBoxFor(m => m.NewTenant.BirthDate, new { @class = "form-control", @type = "date" })
                    </div>

                    <div class="form-group">
                        <label>Giới tính</label>
                        @Html.DropDownListFor(m => m.NewTenant.Gender,
                            new SelectList(new[] {
                                new { Value = "Nam", Text = "Nam" },
                                new { Value = "Nữ", Text = "Nữ" }
                            }, "Value", "Text"),
                            "-- Chọn --",
                            new { @class = "form-control" })
                    </div>

                    <div class="form-group">
                        <label>Biển số xe</label>
                        @Html.TextBoxFor(m => m.NewTenant.VehiclePlate, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label>Địa chỉ thường trú</label>
                    @Html.TextBoxFor(m => m.NewTenant.PermanentAddress, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Ảnh CCCD/Hộ chiếu</label>
                    <input type="file" name="photoFile" class="form-control" accept="image/*" />
                </div>

                <div class="text-center">
                    <button type="submit" class="btn-add-employee">
                        <i class="fas fa-plus"></i> Thêm Nhân Viên
                    </button>
                </div>
            }
        </div>
    }
    else if (Model.ContractType == "Individual")
    {
        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            Đây là hợp đồng cá nhân. Thông tin người thuê đã được cập nhật khi tạo hợp đồng.
        </div>

        @if (Model.CurrentEmployees.Any())
        {
            var tenant = Model.CurrentEmployees.First();
            <div class="employee-card" style="max-width: 500px;">
                <div class="employee-photo">
                    @if (!string.IsNullOrEmpty(tenant.Photo))
                    {
                        <img src="@tenant.Photo" alt="@tenant.FullName" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;" />
                    }
                    else
                    {
                        <i class="fas fa-user fa-2x text-muted"></i>
                    }
                </div>

                <div class="employee-info">
                    <div class="employee-name">@tenant.FullName</div>
                    <div class="employee-details">
                        <i class="fas fa-id-card"></i> @tenant.IdentityCard<br />
                        @if (!string.IsNullOrEmpty(tenant.PhoneNumber))
                        {
                            <i class="fas fa-phone"></i> @tenant.PhoneNumber<br />
                        }
                        @if (tenant.BirthDate.HasValue)
                        {
                            <i class="fas fa-birthday-cake"></i> @tenant.BirthDate.Value.ToString("dd/MM/yyyy")<br />
                        }
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-warning">
            <i class="fas fa-exclamation-triangle"></i>
            Phòng này chưa có hợp đồng active hoặc loại hợp đồng không xác định.
        </div>
    }
</div>

<script>
    // Preview image before upload
    $('input[type="file"]').change(function (e) {
        var fileName = e.target.files[0]?.name;
        if (fileName) {
            $(this).next('.custom-file-label').html(fileName);
        }
    });
</script>