@model NhaTroAnCu.Models.Room
@{
    ViewBag.Title = "Chi tiết phòng " + Model.Name;
    Layout = "~/Views/Shared/_Layout.cshtml";

    // Lấy hợp đồng active từ ViewBag (được set trong Controller)
    var activeContract = ViewBag.ActiveContract as NhaTroAnCu.Models.Contract;

    // Lấy danh sách khách thuê từ hợp đồng active
    var tenants = activeContract != null ?
        activeContract.ContractTenants.Where(ct => ct.RoomId == Model.Id).Select(ct => ct.Tenant).ToList() :
        new List<NhaTroAnCu.Models.Tenant>();

    // Kiểm tra trạng thái hợp đồng
    bool isNearingEnd = activeContract != null &&
        (activeContract.EndDate - DateTime.Now).TotalDays > 0 &&
        (activeContract.EndDate - DateTime.Now).TotalDays <= 30;

    bool isExpired = activeContract != null && activeContract.EndDate < DateTime.Now;

    // Lấy giá thuê thực tế từ ContractRoom
    decimal actualPrice = Model.DefaultPrice;
    if (activeContract != null)
    {
        var contractRoom = activeContract.ContractRooms.FirstOrDefault(cr => cr.RoomId == Model.Id);
        if (contractRoom != null)
        {
            actualPrice = contractRoom.PriceAgreed;
        }
    }
}

<!-- Link CSS file -->
<link href="~/css/room-details.css" rel="stylesheet" />

<div class="room-details-container">
    <!-- Header -->
    <div class="page-header">
        <h2 class="page-title">
            <i class="fas fa-door-open"></i>
            Chi tiết phòng @Model.Name
        </h2>
        <a href="@Url.Action("Index", "Rooms")" class="btn-back">
            <i class="fas fa-arrow-left"></i> Quay lại
        </a>
    </div>

    <div class="row">
        <!-- LEFT COLUMN -->
        <div class="col-md-4">

            <!-- 1. THÔNG TIN PHÒNG & TIỆN ÍCH -->
            <div class="detail-card room-info-card">
                <div class="card-header bg-gradient-primary">
                    <i class="fas fa-home"></i>
                    <span>Tiện ích & Thông tin phòng</span>
                </div>
                <div class="card-body">
                    <!-- Thông tin cơ bản -->
                    <div class="room-basic-info">
                        <div class="info-item">
                            <span class="info-label">Tên phòng:</span>
                            <span class="info-value">@Model.Name</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Dãy:</span>
                            <span class="info-value">@Model.Area</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Tầng:</span>
                            <span class="info-value">@Model.Floor</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Giá mặc định:</span>
                            <span class="info-value price">@Model.DefaultPrice.ToString("N0")đ</span>
                        </div>
                        <div class="info-item">
                            <span class="info-label">Trạng thái:</span>
                            <span class="badge @(Model.IsOccupied ? "badge-success" : "badge-warning")">
                                @(Model.IsOccupied ? "Đang có người ở" : "Còn trống")
                            </span>
                        </div>
                    </div>

                    <hr class="divider" />

                    <!-- Danh sách tiện ích -->
                    <h5 class="section-subtitle">
                        <i class="fas fa-plug"></i> Tiện ích
                    </h5>
                    <ul class="utilities-list">
                        <li>
                            <span class="utility-icon"><i class="fas fa-snowflake"></i></span>
                            <span class="utility-name">Điều hòa</span>
                            <span class="utility-status @(Model.HasAirCondition ? "has-utility" : "no-utility")">
                                @(Model.HasAirCondition ? "Có" : "Không")
                            </span>
                        </li>
                        <li>
                            <span class="utility-icon"><i class="fas fa-cube"></i></span>
                            <span class="utility-name">Tủ lạnh</span>
                            <span class="utility-status @(Model.HasFridge ? "has-utility" : "no-utility")">
                                @(Model.HasFridge ? "Có" : "Không")
                            </span>
                        </li>
                        <li>
                            <span class="utility-icon"><i class="fas fa-fire"></i></span>
                            <span class="utility-name">Bình nóng lạnh</span>
                            <span class="utility-status @(Model.HasWaterHeater ? "has-utility" : "no-utility")">
                                @(Model.HasWaterHeater ? "Có" : "Không")
                            </span>
                        </li>
                        <li>
                            <span class="utility-icon"><i class="fas fa-bed"></i></span>
                            <span class="utility-name">Giường</span>
                            <span class="utility-status @(Model.HasBed ? "has-utility" : "no-utility")">
                                @(Model.HasBed ? "Có" : "Không")
                            </span>
                        </li>
                        <li>
                            <span class="utility-icon"><i class="fas fa-door-closed"></i></span>
                            <span class="utility-name">Tủ quần áo</span>
                            <span class="utility-status @(Model.HasWardrobe ? "has-utility" : "no-utility")">
                                @(Model.HasWardrobe ? "Có" : "Không")
                            </span>
                        </li>
                    </ul>
                </div>
            </div>

            <!-- 2. THÔNG TIN HỢP ĐỒNG -->
            <div class="detail-card contract-info-card">
                <div class="card-header bg-gradient-blue">
                    <i class="fas fa-file-contract"></i>
                    <span>Thông tin hợp đồng</span>
                </div>
                <div class="card-body">
                    @if (activeContract != null)
                    {
                        <!-- Cảnh báo hợp đồng sắp hết hạn -->
                        if (isNearingEnd)
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle"></i>
                                <div>
                                    <strong>Hợp đồng sắp hết hạn!</strong><br />
                                    Còn @((activeContract.EndDate - DateTime.Now).Days) ngày
                                </div>
                            </div>
                        }

                        if (isExpired)
                        {
                            <div class="alert alert-danger">
                                <i class="fas fa-times-circle"></i>
                                <strong>Hợp đồng đã hết hạn!</strong>
                            </div>
                        }

                        <!-- Thông tin hợp đồng -->
                        <div class="contract-details">
                            <div class="detail-row">
                                <span class="detail-label">Mã hợp đồng:</span>
                                <span class="detail-value">#@activeContract.Id</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Loại hợp đồng:</span>
                                <span class="detail-value">
                                    @(activeContract.ContractType == "Company" ? "Công ty" : "Cá nhân")
                                </span>
                            </div>
                            @if (activeContract.ContractType == "Company" && activeContract.Company != null)
                            {
                                <div class="detail-row">
                                    <span class="detail-label">Công ty:</span>
                                    <span class="detail-value">@activeContract.Company.CompanyName</span>
                                </div>
                            }
                            <div class="detail-row">
                                <span class="detail-label">Giá thuê thỏa thuận:</span>
                                <span class="detail-value price">@actualPrice.ToString("N0")đ</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Ngày bắt đầu:</span>
                                <span class="detail-value">@activeContract.StartDate.ToString("dd/MM/yyyy")</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Ngày kết thúc:</span>
                                <span class="detail-value">@activeContract.EndDate.ToString("dd/MM/yyyy")</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Giá điện:</span>
                                <span class="detail-value">@activeContract.ElectricityPrice.ToString("N0")đ/kWh</span>
                            </div>
                            <div class="detail-row">
                                <span class="detail-label">Giá nước:</span>
                                <span class="detail-value">@activeContract.WaterPrice.ToString("N0")đ/m³</span>
                            </div>
                        </div>

                        <!-- Các nút hành động -->
                        <div class="contract-actions">
                            <a href="@Url.Action("Details", "Contracts", new { id = activeContract.Id })"
                               class="btn btn-sm btn-info">
                                <i class="fas fa-eye"></i> Chi tiết
                            </a>
                            <a href="@Url.Action("Edit", "Contracts", new { id = activeContract.Id })"
                               class="btn btn-sm btn-warning">
                                <i class="fas fa-edit"></i> Sửa
                            </a>
                            <a href="@Url.Action("Export", "Contracts", new { id = activeContract.Id })"
                               class="btn btn-sm btn-success">
                                <i class="fas fa-download"></i> Xuất HĐ
                            </a>
                            <button type="button" class="btn btn-sm btn-primary"
                                    onclick="uploadContract(@activeContract.Id)">
                                <i class="fas fa-upload"></i> Upload scan
                            </button>
                            @if (!isExpired)
                            {
                                <button type="button" class="btn btn-sm btn-danger"
                                        onclick="endContract(@activeContract.Id)">
                                    <i class="fas fa-times-circle"></i> Kết thúc
                                </button>
                            }
                        </div>
                    }
                    else
                    {
                        <!-- Không có hợp đồng -->
                        <div class="no-data">
                            <i class="fas fa-file-contract fa-3x"></i>
                            <p>Phòng chưa có hợp đồng đang hoạt động</p>
                            <a href="@Url.Action("Create", "Contracts", new { roomId = Model.Id })"
                               class="btn btn-primary">
                                <i class="fas fa-plus"></i> Tạo hợp đồng mới
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- 3. THÔNG TIN KHÁCH THUÊ -->
            <div class="detail-card tenant-info-card">
                <div class="card-header bg-gradient-green">
                    <i class="fas fa-users"></i>
                    <span>Thông tin khách thuê</span>
                    @if (tenants.Any())
                    {
                        <span class="badge badge-light">@tenants.Count người</span>
                    }
                </div>
                <div class="card-body">
                    @if (tenants.Any())
                    {
                        <div class="tenant-list">
                            @foreach (var tenant in tenants)
                            {
                                <div class="tenant-item">
                                    <div class="tenant-avatar">
                                        @if (!string.IsNullOrEmpty(tenant.Photo))
                                        {
                                            <img src="@tenant.Photo" alt="@tenant.FullName" />
                                        }
                                        else
                                        {
                                            <i class="fas fa-user"></i>
                                        }
                                    </div>
                                    <div class="tenant-details">
                                        <div class="tenant-name">@tenant.FullName</div>
                                        <div class="tenant-info-row">
                                            <i class="fas fa-phone"></i> @tenant.PhoneNumber
                                        </div>
                                        <div class="tenant-info-row">
                                            <i class="fas fa-id-card"></i> @tenant.IdentityCard
                                        </div>
                                        @if (!string.IsNullOrEmpty(tenant.VehiclePlate))
                                        {
                                            <div class="tenant-info-row">
                                                <i class="fas fa-motorcycle"></i> @tenant.VehiclePlate
                                            </div>
                                        }
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Các nút hành động -->
                        <div class="tenant-actions">
                            @if (activeContract != null && activeContract.Status == "Active")
                            {
                                <button type="button" class="btn btn-sm btn-primary"
                                        onclick="addTenant(@Model.Id, @activeContract.Id)">
                                    <i class="fas fa-user-plus"></i> Thêm người
                                </button>
                            }
                            <button type="button" class="btn btn-sm btn-info"
                                    onclick="editTenants(@Model.Id)">
                                <i class="fas fa-user-edit"></i> Sửa thông tin
                            </button>
                            @if (tenants.Count > 1)
                            {
                                <button type="button" class="btn btn-sm btn-danger"
                                        onclick="removeTenant(@Model.Id)">
                                    <i class="fas fa-user-minus"></i> Xóa người
                                </button>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="no-data">
                            <i class="fas fa-users fa-3x"></i>
                            <p>Chưa có thông tin khách thuê</p>
                            @if (activeContract != null && activeContract.Status == "Active")
                            {
                                <button type="button" class="btn btn-primary"
                                        onclick="addTenant(@Model.Id, @activeContract.Id)">
                                    <i class="fas fa-user-plus"></i> Thêm khách thuê
                                </button>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- RIGHT COLUMN -->
        <div class="col-md-8">
            <!-- 4. PHIẾU BÁO TIỀN HẰNG THÁNG -->
            <div class="detail-card">
                <div class="card-header bg-gradient-orange">
                    <i class="fas fa-file-invoice-dollar"></i>
                    <span>Phiếu báo tiền tháng @DateTime.Now.Month/@DateTime.Now.Year</span>
                    @if (activeContract != null)
                    {
                        <span class="badge badge-light">HĐ #@activeContract.Id</span>
                    }
                </div>
                <div class="card-body">
                    @{
                        // Lấy phiếu báo tiền tháng hiện tại
                        var currentMonth = DateTime.Now.Month;
                        var currentYear = DateTime.Now.Year;
                        var currentBill = ViewBag.Bill as NhaTroAnCu.Models.UtilityBill;

                        // Lấy chỉ số nước tháng trước
                        var waterPrev = ViewBag.WaterPrev ?? 0;
                    }

                    @if (activeContract != null)
                    {
                        if (currentBill != null)
                        {
                            <!-- Hiển thị thông tin phiếu đã tạo -->
                            <div class="bill-details">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="detail-row">
                                            <span class="detail-label">Chỉ số nước:</span>
                                            <span class="detail-value">@currentBill.WaterIndexStart - @currentBill.WaterIndexEnd</span>
                                        </div>
                                        <div class="detail-row">
                                            <span class="detail-label">Tiền nước:</span>
                                            <span class="detail-value price">@currentBill.WaterAmount.ToString("N0")đ</span>
                                        </div>
                                        <div class="detail-row">
                                            <span class="detail-label">Tiền điện:</span>
                                            <span class="detail-value price">@currentBill.ElectricityAmount.ToString("N0")đ</span>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="detail-row">
                                            <span class="detail-label">Tiền phòng:</span>
                                            <span class="detail-value price">@currentBill.RentAmount.ToString("N0")đ</span>
                                        </div>
                                        <div class="detail-row">
                                            <span class="detail-label">Phụ thu:</span>
                                            <span class="detail-value">@(currentBill.ExtraCharge .ToString("N0"))đ</span>
                                        </div>
                                        <div class="detail-row">
                                            <span class="detail-label">Giảm trừ:</span>
                                            <span class="detail-value">@(currentBill.Discount.ToString("N0"))đ</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="bill-total-box">
                                    <div class="total-label">Tổng cần thu:</div>
                                    <div class="total-amount">@currentBill.TotalAmount.ToString("N0")đ</div>
                                </div>

                                @if (!string.IsNullOrEmpty(currentBill.BillNote))
                                {
                                    <div class="bill-note">
                                        <i class="fas fa-sticky-note"></i> Ghi chú: @currentBill.BillNote
                                    </div>
                                }

                                <div class="bill-actions">
                                    <button type="button" class="btn btn-warning"
                                            onclick="openEditBillModal(@Model.Id)">
                                        <i class="fas fa-edit"></i> Sửa phiếu
                                    </button>
                                    <button type="button" class="btn btn-success"
                                            onclick="exportBill(@currentBill.Id)">
                                        <i class="fas fa-print"></i> In phiếu
                                    </button>
                                    <button type="button" class="btn btn-danger"
                                            onclick="deleteBill(@currentBill.Id)">
                                        <i class="fas fa-trash"></i> Xóa phiếu
                                    </button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <!-- Chưa có phiếu báo tiền -->
                            <div class="no-data">
                                <i class="fas fa-file-invoice fa-3x"></i>
                                <p>Chưa có phiếu báo tiền tháng @currentMonth/@currentYear</p>
                                <button type="button" class="btn btn-primary"
                                        onclick="openCreateBillModal(@Model.Id)">
                                    <i class="fas fa-plus"></i> Tạo phiếu mới
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="no-data">
                            <i class="fas fa-exclamation-triangle fa-3x"></i>
                            <p>Vui lòng tạo hợp đồng trước khi tạo phiếu báo tiền</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Modal tạo/sửa phiếu báo tiền -->
            <div class="modal fade" id="utilityBillModal" tabindex="-1" role="dialog">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">
                                <i class="fas fa-file-invoice-dollar"></i>
                                <span id="modalTitle">Tạo phiếu báo tiền</span>
                            </h5>
                            <button type="button" class="close" data-dismiss="modal">
                                <span>&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" id="modalContent">
                            <!-- Content sẽ được load bằng AJAX -->
                        </div>
                    </div>
                </div>
            </div>

            <!-- 5. GHI NHẬN THANH TOÁN -->
            @Html.Partial("_PaymentRecordingPartial")
            @Html.Partial("_PaymentHistoryPartial")
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Contract functions
        function uploadContract(contractId) {
            Swal.fire({
                title: 'Tính năng đang phát triển',
                text: 'Upload scan hợp đồng #' + contractId,
                icon: 'info',
                confirmButtonText: 'Đóng',
                confirmButtonColor: '#3085d6'
            });
        }

        function endContract(contractId) {
            Swal.fire({
                title: 'Xác nhận kết thúc hợp đồng?',
                text: 'Bạn có chắc chắn muốn kết thúc hợp đồng này?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Kết thúc',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '@Url.Action("EndContract", "Contracts")/' + contractId;
                }
            });
        }

        // Tenant functions
        function addTenant(roomId, contractId) {
            window.location.href = '@Url.Action("AddTenant", "TenantContracts")?contractId=' + contractId + '&roomId=' + roomId;
        }

        function editTenants(roomId) {
            window.location.href = '@Url.Action("ManageTenants", "Rooms", new { id = "__id__" })'.replace('__id__', roomId);
        }

        function removeTenant(roomId) {
            Swal.fire({
                title: 'Xác nhận xóa khách thuê?',
                text: 'Bạn có chắc chắn muốn xóa khách thuê này?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    Swal.fire({
                        title: 'Tính năng đang phát triển',
                        text: 'Xóa khách thuê từ phòng #' + roomId,
                        icon: 'info',
                        confirmButtonText: 'Đóng'
                    });
                }
            });
        }

        // Utility Bill functions
        function openCreateBillModal(roomId) {
            $('#modalTitle').text('Tạo phiếu báo tiền mới');

            // Load form tạo phiếu báo tiền qua AJAX
            $.ajax({
                url: '@Url.Action("CreateUtilityBillPartial", "UtilityBills")',
                data: { roomId: roomId },
                success: function(data) {
                    $('#modalContent').html(data);
                    initBillForm();
                    $('#utilityBillModal').modal('show');
                },
                error: function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: 'Có lỗi xảy ra khi tải form!',
                        confirmButtonColor: '#d33'
                    });
                }
            });
        }

        function openEditBillModal(roomId) {
    $('#modalTitle').text('Sửa phiếu báo tiền');

    // Load form sửa phiếu báo tiền qua AJAX
    $.ajax({
        url: '@Url.Action("CreateUtilityBillPartial", "UtilityBills")',
        data: { roomId: roomId },
        success: function(data) {
            $('#modalContent').html(data);
            initBillForm();
            $('#utilityBillModal').modal('show');
        },
        error: function() {
            Swal.fire({
                icon: 'error',
                title: 'Lỗi!',
                text: 'Có lỗi xảy ra khi tải form!',
                confirmButtonColor: '#d33'
            });
        }
    });
}

// THÊM VÀO initBillForm() để set giá trị cho các field money khi edit:
function initBillForm() {
    // Initialize AutoNumeric for money inputs
    $('.money').each(function() {
        var $input = $(this);

        // Skip if already initialized
        if ($input.data('autonumeric-initialized')) {
            return;
        }

        // Get initial value before AutoNumeric
        var initialValue = $input.val() || 0;

        // Create hidden input for actual value
        var inputName = $input.attr('name') || $input.attr('id');
        if (inputName) {
            var $hiddenInput = $('<input type="hidden" name="' + inputName + '" />');
            $hiddenInput.val(initialValue);
            $input.after($hiddenInput);
            $input.removeAttr('name');
        }

        // Initialize AutoNumeric
        var anInstance = new AutoNumeric($input[0], {
            digitGroupSeparator: '.',
            decimalCharacter: ',',
            decimalPlaces: 0,
            unformatOnSubmit: false
        });

        // Set initial value nếu đang edit
        if (initialValue && initialValue != 0) {
            anInstance.set(initialValue);
        }

        // Update hidden input when value changes
        $input.on('input change blur', function() {
            var rawValue = anInstance.getNumber();
            $hiddenInput.val(rawValue);
        });

        // Mark as initialized
        $input.data('autonumeric-initialized', true);
    });

    // Bind water calculation events
    $('#waterCurrent, #waterPrice').on('input change', updateWaterUsedAndMoney);

    // Bind total calculation events
    $('#electricMoney, #waterMoney, #rentMoney, #extraCharge, #discount').on('input change', updateTotalMoney);

    // Initial calculations
    updateWaterUsedAndMoney();
    updateTotalMoney();

    // Handle form submit
    $('#utilityBillForm').off('submit').on('submit', function(e) {
        e.preventDefault();

        var formData = $(this).serialize();

        $.ajax({
            url: '@Url.Action("CreateOrUpdateAjax", "UtilityBills")',
            type: 'POST',
            data: formData,
            success: function(result) {
                if (result.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: result.message,
                        confirmButtonColor: '#28a745'
                    }).then(() => {
                        $('#utilityBillModal').modal('hide');
                        location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Lỗi!',
                        text: result.message,
                        confirmButtonColor: '#d33'
                    });
                }
            },
            error: function() {
                Swal.fire({
                    icon: 'error',
                    title: 'Lỗi!',
                    text: 'Có lỗi xảy ra khi lưu phiếu báo tiền!',
                    confirmButtonColor: '#d33'
                });
            }
        });
    });
}

// Helper functions cho calculation
function getMoney(selector) {
    var anElement = AutoNumeric.getAutoNumericElement(selector);
    return anElement ? anElement.getNumber() : (parseInt($(selector).val()) || 0);
}

function updateWaterUsedAndMoney() {
    var start = parseInt($('#waterPrev').val()) || 0;
    var end = parseInt($('#waterCurrent').val()) || 0;
    var price = getMoney('#waterPrice') || 0;
    var used = end - start;

    if (used < 0) used = 0;
    $('#waterUsed').val(used);

    var waterMoney = used * price;

    // Set water money value
    var waterMoneyElement = AutoNumeric.getAutoNumericElement('#waterMoney');
    if (waterMoneyElement) {
        waterMoneyElement.set(waterMoney);
    } else {
        $('#waterMoney').val(waterMoney);
    }

    updateTotalMoney();
}

function updateTotalMoney() {
    var electric = getMoney('#electricMoney') || 0;
    var water = getMoney('#waterMoney') || 0;
    var rent = getMoney('#rentMoney') || 0;
    var extra = getMoney('#extraCharge') || 0;
    var discount = getMoney('#discount') || 0;

    var total = electric + water + rent + extra - discount;
    if (total < 0) total = 0;

    // Set total value
    var totalElement = AutoNumeric.getAutoNumericElement('#totalMoney');
    if (totalElement) {
        totalElement.set(total);
    } else {
        $('#totalMoney').val(total);
    }
}


        function exportBill(billId) {
            window.open('@Url.Action("Export", "UtilityBills")/' + billId);
        }

        function deleteBill(billId) {
            Swal.fire({
                title: 'Xác nhận xóa phiếu báo tiền?',
                text: 'Bạn không thể hoàn tác sau khi xóa!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("Delete", "UtilityBills")/' + billId,
                        type: 'POST',
                        success: function() {
                            Swal.fire(
                                'Đã xóa!',
                                'Phiếu báo tiền đã được xóa.',
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        },
                        error: function() {
                            Swal.fire(
                                'Lỗi!',
                                'Không thể xóa phiếu báo tiền.',
                                'error'
                            );
                        }
                    });
                }
            });
        }
        $('#paymentForm').submit(function(e) {
            e.preventDefault();

            var btn = $(this).find('button[type="submit"]');
            var originalText = btn.html();
            btn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Đang xử lý...');

            $.post('@Url.Action("RecordRoomPayment", "Rooms")', $(this).serialize(), function(res) {
                if(res.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Thành công!',
                        text: 'Đã ghi nhận thanh toán',
                        showCancelButton: true,
                        confirmButtonText: 'Tải hóa đơn PDF',
                        cancelButtonText: 'Đóng'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Mở PDF trong tab mới
                            window.open(res.receiptUrl, '_blank');
                        }
                        location.reload();
                    });
                } else {
                    btn.prop('disabled', false).html(originalText);
                    Swal.fire('Lỗi', res.message || 'Không thể ghi nhận thanh toán', 'error');
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('.toggle-detail').click(function () {
                var month = $(this).data('month');
                var year = $(this).data('year');
                var parentKey = month + '-' + year;

                $('.bill-detail-row[data-parent="' + parentKey + '"]').toggle();
                $('.payment-detail-row[data-parent="' + parentKey + '"]').toggle();

                var icon = $(this).find('i');
                if (icon.hasClass('fa-chevron-down')) {
                    icon.removeClass('fa-chevron-down').addClass('fa-chevron-up');
                } else {
                    icon.removeClass('fa-chevron-up').addClass('fa-chevron-down');
                }
            });
        });
    </script>
}