@model NhaTroAnCu.Models.ContractEditViewModel
@using NhaTroAnCu.Models
@{
    ViewBag.Title = "Chỉnh sửa Hợp Đồng #" + Model.Id;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/CSS/contract-action.css" rel="stylesheet" />

<div class="contract-form-container">
    <div class="form-header">
        <h2><i class="fas fa-edit"></i> Chỉnh Sửa Hợp Đồng #@Model.Id</h2>
        <p>Cập nhật thông tin hợp đồng thuê nhà</p>
    </div>

    @using (Html.BeginForm("Edit", "Contracts", FormMethod.Post, new { @class = "contract-form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.ContractType)
        @Html.HiddenFor(m => m.CompanyId)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Thông tin loại hợp đồng -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-info-circle"></i> Loại Hợp Đồng
            </div>
            <div class="alert alert-info">
                <i class="fas fa-@(Model.ContractType == "Company" ? "building" : "user")"></i>
                <strong>@(Model.ContractType == "Company" ? "Hợp đồng Công ty" : "Hợp đồng Cá nhân")</strong>
                @if (Model.ContractType == "Company" && !string.IsNullOrEmpty(Model.CompanyName))
                {
                    <span> - @Model.CompanyName</span>
                }
            </div>
        </div>

        <!-- Thông tin chung hợp đồng -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-file-contract"></i> Thông Tin Hợp Đồng
            </div>

            <div class="form-row">
                <div class="form-group">
                    @Html.LabelFor(m => m.StartDate)
                    @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control datetime", @Value = Model.StartDate.ToString("dd/MM/yyyy") })
                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.EndDate)
                    @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control datetime", @Value = Model.EndDate.ToString("dd/MM/yyyy") })
                    @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.MoveInDate)
                    @Html.TextBoxFor(m => m.MoveInDate, new { @class = "form-control datetime", @Value = Model.MoveInDate.ToString("dd/MM/yyyy") })
                    @Html.ValidationMessageFor(m => m.MoveInDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    @Html.LabelFor(m => m.ElectricityPrice)
                    @Html.TextBoxFor(m => m.ElectricityPrice, new { @class = "form-control money" })
                    @Html.ValidationMessageFor(m => m.ElectricityPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.WaterPrice)
                    @Html.TextBoxFor(m => m.WaterPrice, new { @class = "form-control money" })
                    @Html.ValidationMessageFor(m => m.WaterPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Status)
                    @Html.DropDownListFor(m => m.Status, new SelectList(new[] {
                        new { Value = "Active", Text = "Đang hoạt động" },
                        new { Value = "Inactive", Text = "Không hoạt động" },
                        new { Value = "Ended", Text = "Đã kết thúc" }
                    }, "Value", "Text", Model.Status), new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Status, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Note)
                @Html.TextAreaFor(m => m.Note, new { @class = "form-control", rows = 3 })
                @Html.ValidationMessageFor(m => m.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Thông tin phòng và giá thuê -->
        if (Model.ContractType == "Individual")
        {
            <div class="form-section">
                <div class="section-title">
                    <i class="fas fa-door-open"></i> Thông Tin Phòng
                </div>

                <div class="form-row">
                    <div class="form-group">
                        @Html.LabelFor(m => m.RoomId)
                        @Html.DropDownListFor(m => m.RoomId, (IEnumerable<SelectListItem>)ViewBag.AvailableRooms,
                            "-- Chọn phòng --", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.RoomId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.PriceAgreed)
                        @Html.TextBoxFor(m => m.PriceAgreed, new { @class = "form-control money" })
                        @Html.ValidationMessageFor(m => m.PriceAgreed, "", new { @class = "text-danger" })
                    </div>
                    <!-- Thêm đoạn code này vào phần Thông Tin Phòng cho Individual Contract -->
                    <!-- Đặt sau phần PriceAgreed (khoảng dòng 130 trong file Edit.cshtml) -->

                    <div class="form-group">
                        @Html.LabelFor(m => m.SelectedRooms[0].Notes)
                        @Html.TextBoxFor(m => m.SelectedRooms[0].Notes, new
                        {
                            @class = "form-control",
                            @placeholder = "Nhập ghi chú..."
                        })
                        @Html.ValidationMessageFor(m => m.SelectedRooms[0].Notes, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <!-- Thông tin người thuê -->
            @Html.Partial("_TenantManagement", new TenantManagementViewModel() { ContractId = Model.Id, RoomId = Model.RoomId.Value, Tenants = Model.Tenants })
        }
        else if (Model.ContractType == "Company")
        {
            <!-- Thông tin phòng cho công ty -->
            <div class="room-section-container">
                <div class="room-section-title">
                    <i class="fas fa-door-open"></i>
                    <span>Chọn Phòng Cho Công Ty</span>
                    @if (ViewBag.AvailableRooms != null)
                    {
                        var roomCount = ((dynamic)ViewBag.AvailableRooms).Count;
                        <span class="room-count-badge">
                            <i class="fas fa-home"></i> @roomCount phòng có sẵn
                        </span>
                    }
                </div>

                <!-- Search và filter bar -->
                <div class="room-filter-bar">
                    <div class="search-box">
                        <i class="fas fa-search"></i>
                        <input type="text" id="roomSearchInput" placeholder="Tìm kiếm phòng..." class="form-control">
                    </div>
                    <div class="filter-buttons">
                        <button type="button" class="btn-filter active" data-filter="all">
                            Tất cả
                        </button>
                        <button type="button" class="btn-filter" data-filter="selected">
                            Đã chọn <span class="selected-count">0</span>
                        </button>
                    </div>
                </div>

                <!-- Danh sách phòng với grid layout -->
                <div class="room-selection-grid">
                    @if (Model.SelectedRooms != null && Model.SelectedRooms.Any())
                    {
                        for (int i = 0; i < Model.SelectedRooms.Count; i++)
                        {
                            var room = Model.SelectedRooms[i];
                            <div class="room-card @(room.IsSelected ? "selected" : "")"
                                 data-room-id="@room.RoomId"
                                 data-index="@i"
                                 data-room-name="@room.RoomName.ToLower()">

                                <!-- Hidden inputs để giữ data -->
                                <input type="hidden" name="SelectedRooms[@i].RoomId" value="@room.RoomId" />
                                <input type="hidden" name="SelectedRooms[@i].RoomName" value="@room.RoomName" />
                                <input type="hidden" name="SelectedRooms[@i].DefaultPrice" value="@room.DefaultPrice" />
                                <!-- Hidden input để lưu giá gốc khi submit (không format) -->
                                <input type="hidden"
                                       class="agreed-price-hidden"
                                       name="SelectedRooms[@i].AgreedPrice"
                                       value="@room.AgreedPrice" />

                                <!-- Room card header -->
                                <div class="room-card-header">
                                    <div class="room-checkbox-wrapper">
                                        <input type="checkbox"
                                               class="company-room-checkbox"
                                               id="edit_room_@i"
                                               name="SelectedRooms[@i].IsSelected"
                                               value="true"
                                               data-room-id="@room.RoomId"
                                               data-index="@i"
                                               data-price="@room.DefaultPrice"
                                               @(room.IsSelected ? "checked" : "") />
                                        <input type="hidden" name="SelectedRooms[@i].IsSelected" value="false" />
                                    </div>
                                    <label for="edit_room_@i" class="room-name-label">
                                        <i class="fas fa-door-closed room-icon"></i>
                                        <strong>@room.RoomName</strong>
                                    </label>
                                    <div class="room-status-badge">
                                        @if (room.IsSelected)
                                        {
                                            <span class="badge badge-success">Đang thuê</span>
                                        }
                                        else
                                        {
                                            <span>Trống</span>
                                        }
                                    </div>
                                </div>

                                <!-- Room details -->
                                <div class="room-card-body">
                                    <div class="room-info-row">
                                        <span class="info-label">Giá mặc định:</span>
                                        <span class="info-value default-price">@room.DefaultPrice.ToString("N0")đ</span>
                                    </div>

                                    <!-- Expandable section - hiện nếu đã chọn -->
                                    <div class="room-details-section" style="@(room.IsSelected ? "" : "display: none;")">
                                        <div class="price-input-group">
                                            <label class="input-label">
                                                <i class="fas fa-tag"></i> Giá thỏa thuận
                                            </label>

                                            <div class="custom-price-section">
                                                <div class="input-with-unit">
                                                    <!-- Input hiển thị có format (cho người dùng xem) -->
                                                    <input type="text"
                                                           class="form-control room-agreed-price-display money"
                                                           value="@room.AgreedPrice"
                                                           data-index="@i"
                                                           data-default-price="@room.DefaultPrice"
                                                           placeholder="Nhập giá thỏa thuận" />
                                                    <span class="unit">đ/tháng</span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="notes-input-group">
                                            <label class="input-label">
                                                <i class="fas fa-sticky-note"></i> Ghi chú
                                            </label>
                                            <textarea class="form-control"
                                                      name="SelectedRooms[@i].Notes"
                                                      rows="2"
                                                      placeholder="Nhập ghi chú về phòng này...">@room.Notes</textarea>
                                        </div>

                                        <!-- Hiển thị số người thuê nếu có -->
                                        @if (ViewBag.RoomTenantCounts != null && room.IsSelected)
                                        {
                                            var counts = ViewBag.RoomTenantCounts as Dictionary<int, int>;
                                            if (counts != null && counts.ContainsKey(room.RoomId))
                                            {
                                                <div class="tenant-count-info">
                                                    <i class="fas fa-users"></i>
                                                    Số người thuê hiện tại: <strong>@counts[room.RoomId]</strong>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="fas fa-home-lg-alt"></i>
                            <h4>Không có phòng</h4>
                            <p>Không tìm thấy danh sách phòng</p>
                        </div>
                    }
                </div>

                <!-- Summary section -->
                <div class="company-summary-section">
                    <div class="summary-card">
                        <h5><i class="fas fa-chart-bar"></i> Tổng quan lựa chọn</h5>
                        <div class="summary-grid">
                            <div class="summary-item">
                                <div class="summary-icon">
                                    <i class="fas fa-door-open"></i>
                                </div>
                                <div class="summary-content">
                                    <span class="summary-label">Số phòng đã chọn</span>
                                    <span class="summary-value" id="totalRooms">0</span>
                                </div>
                            </div>
                            <div class="summary-item">
                                <div class="summary-icon">
                                    <i class="fas fa-money-bill-wave"></i>
                                </div>
                                <div class="summary-content">
                                    <span class="summary-label">Tổng tiền thuê/tháng</span>
                                    <span class="summary-value" id="totalRent">0đ</span>
                                </div>
                            </div>
                            <div class="summary-item">
                                <div class="summary-icon">
                                    <i class="fas fa-percentage"></i>
                                </div>
                                <div class="summary-content">
                                    <span class="summary-label">Giảm giá trung bình</span>
                                    <span class="summary-value" id="avgDiscount">0%</span>
                                </div>
                            </div>
                        </div>

                        <!-- Selected rooms list -->
                        <div class="selected-rooms-list" id="selectedRoomsList">
                            <h6><i class="fas fa-list-ul"></i> Danh sách phòng đã chọn:</h6>
                            <div class="selected-rooms-container"></div>
                        </div>
                    </div>
                </div>
            </div>

        }


        <!-- File scan hợp đồng -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-file-pdf"></i> File Scan Hợp Đồng
            </div>

            @if (!string.IsNullOrEmpty(Model.ContractScanFilePath))
            {
                <div class="alert alert-success">
                    <i class="fas fa-check-circle"></i>
                    File hiện tại: <a href="@Model.ContractScanFilePath" target="_blank">Xem file</a>
                </div>
            }

            <div class="form-group">
                <label>Tải lên file mới (PDF, JPG, PNG - Tối đa 5MB)</label>
                <input type="file" name="ContractScanFile" class="form-control-file" accept=".pdf,.jpg,.jpeg,.png" />
                <small class="form-text text-muted">Bỏ trống nếu không muốn thay đổi file hiện tại</small>
            </div>
        </div>

        <!-- Buttons -->
        <div class="form-actions">
            <button type="submit" class="btn btn-primary">
                <i class="fas fa-save"></i> Lưu thay đổi
            </button>
            <a href="@Url.Action("Details", new { id = Model.Id })" class="btn btn-secondary">
                <i class="fas fa-times"></i> Hủy
            </a>
        </div>
    }
</div>

<style>
/* Modal styles */
#manageTenantModal .modal-dialog {
    max-width: 1200px;
}

.room-info-bar {
    border-left: 4px solid #007bff;
    background: linear-gradient(to right, #f8f9fa, #ffffff);
}

.tenant-card-modal {
    animation: slideIn 0.3s ease;
}

@*@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}*@

.tenant-card-modal .card {
    transition: all 0.3s;
    border-left: 3px solid #28a745;
}

.tenant-card-modal .card:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    transform: translateY(-2px);
}

.tenant-avatar {
    border: 3px solid #fff;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.quick-actions {
    border: 2px dashed #dee2e6;
}

.transfer-tenant-item {
    cursor: pointer;
    transition: background 0.2s;
}

.transfer-tenant-item:hover {
    background: #f1f3f5;
}

.nav-tabs .nav-link {
    font-weight: 500;
    color: #495057;
}

.nav-tabs .nav-link.active {
    color: #007bff;
    border-color: #dee2e6 #dee2e6 #fff;
    font-weight: 600;
}

.nav-tabs .nav-link .badge {
    font-size: 0.75rem;
}

/* Custom file input */
.custom-file-label::after {
    content: "Chọn file";
}

/* Responsive */
@*@media (max-width: 768px) {
    #manageTenantModal .modal-dialog {
        max-width: 100%;
        margin: 10px;
    }

    .room-info-bar .row > div {
        margin-bottom: 10px;
    }
}*@
</style>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="~/js/tenant-management.js"></script>
    <script>


        // Biến tracking submit
        var isFormSubmitting = false;

        $(document).ready(function() {

            // Set default dates với format đúng
            var today = new Date();
            var dd = ('0' + today.getDate()).slice(-2);
            var mm = ('0' + (today.getMonth() + 1)).slice(-2);
            var yyyy = today.getFullYear();
            var formattedToday = dd + '/' + mm + '/' + yyyy;

            // Set default values cho các input rỗng
            $('.datetime').each(function () {
                if (!$(this).val() || $(this).val() === '') {
                    $(this).datepicker('setDate', today);
                }
            });

            // XỬ LÝ SUBMIT FORM - SỬA LẠI HOÀN TOÀN
            $('form.contract-form').off('submit').on('submit', function(e) {
                // Nếu đang submit rồi thì cho qua
                if (isFormSubmitting) {
                    return true;
                }

                // Chặn submit tạm thời để validate
                e.preventDefault();
                e.stopPropagation();

                var $form = $(this);
                var contractType = '@Model.ContractType';
                var isValid = true;
                var errorMessage = '';

                // 2. VALIDATE HỢP ĐỒNG CÁ NHÂN
                if (contractType === 'Individual') {
                    // Check phòng
                    if (!$('#RoomId').val()) {
                        isValid = false;
                        errorMessage = 'Vui lòng chọn phòng cho hợp đồng!';
                    }
                    // Check giá thuê
                    else if (!$('#PriceAgreed').val() || parseFloat($('#PriceAgreed').val()) <= 0) {
                        isValid = false;
                        errorMessage = 'Vui lòng nhập giá thuê thỏa thuận!';
                    }
                }

                // 4. VALIDATE DATES
                if (isValid) {
                    var startDateStr = $('#StartDate').val();
                    var endDateStr = $('#EndDate').val();

                    if (startDateStr && endDateStr) {
                        // Convert dd/MM/yyyy to Date
                        var startParts = startDateStr.split('/');
                        var endParts = endDateStr.split('/');

                        var startDate = new Date(startParts[2], startParts[1] - 1, startParts[0]);
                        var endDate = new Date(endParts[2], endParts[1] - 1, endParts[0]);

                        if (endDate <= startDate) {
                            isValid = false;
                            errorMessage = 'Ngày kết thúc phải sau ngày bắt đầu!';
                        }
                    }
                }

                // 5. XỬ LÝ KẾT QUẢ VALIDATE
                if (!isValid) {
                    // Hiển thị lỗi
                    Swal.fire({
                        icon: 'warning',
                        title: 'Thông tin không hợp lệ',
                        text: errorMessage,
                        confirmButtonColor: '#ffc107'
                    });

                    // Re-init AutoNumeric cho các field money
                    reinitAutoNumeric();

                    return false;
                }

                // 6. SUBMIT FORM THỰC SỰ
                isFormSubmitting = true;

                // Disable nút submit
                $form.find('button[type="submit"]').prop('disabled', true)
                    .html('<i class="fas fa-spinner fa-spin"></i> Đang lưu...');

                // Submit form using native JavaScript
                console.log('Submitting form to server...');

                // QUAN TRỌNG: Dùng setTimeout để đảm bảo tất cả xử lý xong
                setTimeout(function() {
                    // Submit bằng native JS, không qua jQuery
                    $form[0].submit();
                }, 100);
            });

        });
        $(document).on('change', '.company-room-checkbox', function () {
            var roomCard = $(this).closest('.room-card');
            var detailsSection = roomCard.find('.room-details-section');

            if ($(this).is(':checked')) {
                roomCard.addClass('selected');
                detailsSection.slideDown(300);
            } else {
                roomCard.removeClass('selected');
                detailsSection.slideUp(300);
            }

            updateCompanySummary();
            updateSelectedRoomsList();
        });

        // Xử lý khi thay đổi giá (update hidden input)
        $(document).on('input change', '.room-agreed-price-display', function () {
            var index = $(this).data('index');
            var value = $(this).val().replace(/\./g, ''); // Remove thousand separators

            // Update hidden input với giá trị không format
            $('input[name="SelectedRooms[' + index + '].AgreedPrice"]').val(value);

            updateCompanySummary();
        });

        // Search phòng
        $('#roomSearchInput').on('input', function () {
            var searchTerm = $(this).val().toLowerCase();

            $('.room-card').each(function () {
                var roomName = $(this).data('room-name');
                if (roomName.includes(searchTerm)) {
                    $(this).show();
                } else {
                    $(this).hide();
                }
            });
        });

        // Filter buttons
        $('.btn-filter').on('click', function () {
            $('.btn-filter').removeClass('active');
            $(this).addClass('active');

            var filter = $(this).data('filter');

            if (filter === 'all') {
                $('.room-card').show();
            } else if (filter === 'selected') {
                $('.room-card').hide();
                $('.room-card.selected').show();
            }
        });

        // Update summary
        function updateCompanySummary() {
            var totalRooms = 0;
            var totalRent = 0;
            var totalDefault = 0;

            $('.company-room-checkbox:checked').each(function () {
                totalRooms++;
                var roomCard = $(this).closest('.room-card');
                var index = $(this).data('index');

                // Lấy giá từ hidden input (không format)
                var agreedPrice = parseFloat($('input[name="SelectedRooms[' + index + '].AgreedPrice"]').val()) || 0;
                var defaultPrice = parseFloat($(this).data('price')) || 0;

                totalRent += agreedPrice;
                totalDefault += defaultPrice;
            });

            var avgDiscount = totalDefault > 0 ?
                Math.round((totalDefault - totalRent) / totalDefault * 100) : 0;

            $('#totalRooms').text(totalRooms);
            $('#totalRent').text(totalRent.toLocaleString('vi-VN') + 'đ');

            if (avgDiscount > 0) {
                $('#avgDiscount').text('-' + Math.abs(avgDiscount) + '%').css('color', '#28a745');
            } else if (avgDiscount < 0) {
                $('#avgDiscount').text('+' + Math.abs(avgDiscount) + '%').css('color', '#dc3545');
            } else {
                $('#avgDiscount').text('0%').css('color', '#495057');
            }

            $('.btn-filter[data-filter="selected"] .selected-count').text(totalRooms);
        }

        // Update selected rooms list
        function updateSelectedRoomsList() {
            var container = $('.selected-rooms-container');
            container.empty();

            $('.company-room-checkbox:checked').each(function () {
                var roomCard = $(this).closest('.room-card');
                var roomName = roomCard.find('.room-name-label strong').text();
                var roomId = $(this).data('room-id');
                var index = $(this).data('index');

                var price = parseFloat($('input[name="SelectedRooms[' + index + '].AgreedPrice"]').val()) || 0;
                var priceText = price.toLocaleString('vi-VN') + 'đ';

                var tag = $('<div class="selected-room-tag">' +
                    '<span>' + roomName + ' - ' + priceText + '</span>' +
                    '<button type="button" class="remove-btn" data-room-id="' + roomId + '">×</button>' +
                    '</div>');

                container.append(tag);
            });

            if ($('.company-room-checkbox:checked').length > 0) {
                $('#selectedRoomsList').show();
            } else {
                $('#selectedRoomsList').hide();
            }
        }

        // Handle remove room from selected list
        $(document).on('click', '.selected-room-tag .remove-btn', function () {
            var roomId = $(this).data('room-id');
            var checkbox = $('.company-room-checkbox[data-room-id="' + roomId + '"]');
            checkbox.prop('checked', false).trigger('change');
        });

        // Xử lý trước khi submit form
        $('form').on('submit', function (e) {
            // Update tất cả hidden inputs với giá trị không format
            $('.room-agreed-price-display').each(function () {
                var index = $(this).data('index');
                var value = $(this).val().replace(/\./g, '');
                $('input[name="SelectedRooms[' + index + '].AgreedPrice"]').val(value);
            });
        });

        // Initialize on load
        updateCompanySummary();
        updateSelectedRoomsList();

    </script>
}
