@model NhaTroAnCu.Models.ContractCreateViewModel
@using NhaTroAnCu.Models
@{
    ViewBag.Title = "Tạo Hợp Đồng Mới";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/CSS/contract-action.css" rel="stylesheet" />

<div class="contract-form-container">
    <div class="form-header">
        <h2><i class="fas fa-file-contract"></i> Tạo Hợp Đồng Thuê Nhà</h2>
        <p>Vui lòng chọn loại khách hàng và điền đầy đủ thông tin</p>
    </div>

    @using (Html.BeginForm("Create", "Contracts", FormMethod.Post, new { @class = "contract-form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Chọn loại hợp đồng -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-users"></i> Loại Khách Hàng
            </div>

            <div class="contract-type-selector">
                <div class="type-card" data-type="Individual">
                    <i class="fas fa-user"></i>
                    <h4>Khách Hàng Cá Nhân</h4>
                    <p>Thuê cho cá nhân/hộ gia đình</p>
                </div>
                <div class="type-card" data-type="Company">
                    <i class="fas fa-building"></i>
                    <h4>Khách Hàng Công Ty</h4>
                    <p>Thuê cho doanh nghiệp/tổ chức</p>
                </div>
            </div>

            @Html.HiddenFor(m => m.ContractType, new { @id = "ContractType" })
        </div>

        <!-- Thông tin chung -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-info-circle"></i> Thông Tin Hợp Đồng
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Ngày bắt đầu <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.StartDate, "{0:dd/MM/yyyy}", new { @class = "form-control datetime", @placeholder = "dd/MM/yyyy" })
                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Số tháng thuê <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Months, new { @class = "form-control", @type = "number", @min = "1", @max = "120" })
                    @Html.ValidationMessageFor(m => m.Months, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Ngày chuyển vào <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.MoveInDate, "{0:dd/MM/yyyy}", new { @class = "form-control datetime", @placeholder = "dd/MM/yyyy" })
                    @Html.ValidationMessageFor(m => m.MoveInDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-row">
                <div class="form-group">
                    <label>Giá điện (đ/kWh) <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.ElectricityPrice, new { @class = "form-control money", @step = "100" })
                    @Html.ValidationMessageFor(m => m.ElectricityPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Giá nước (đ/m³) <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.WaterPrice, new { @class = "form-control money", @step = "1000" })
                    @Html.ValidationMessageFor(m => m.WaterPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>Ghi chú</label>
                @Html.TextAreaFor(m => m.Note, new { @class = "form-control", @rows = "3" })
            </div>
        </div>

        <!-- Section cho khách hàng cá nhân -->
        <div id="individualSection" class="form-section hidden">
            <!-- Chọn phòng cho hợp đồng cá nhân -->
            <div class="section-title" style="margin-top: 30px;">
                <i class="fas fa-door-open"></i> Chọn Phòng
            </div>

            <div class="form-group">
                <label>Chọn phòng <span class="text-danger">*</span></label>
                @Html.DropDownListFor(m => m.SingleRoomId,
                    new SelectList(ViewBag.AvailableRooms ?? new List<SelectListItem>(), "RoomId", "RoomName"),
                    "-- Chọn phòng --",
                    new { @class = "form-control" })
            </div>

            <div class="form-group">
                <label>Giá thuê (đ/tháng)</label>
                @Html.TextBoxFor(m => m.SingleRoomPrice, new { @class = "form-control money", @id = "singleRoomPrice" })
                <small class="form-text text-muted">Để trống sẽ lấy giá mặc định của phòng</small>
            </div>
        </div>

        <!-- Section cho khách hàng công ty (giữ nguyên) -->
        <div id="companySection" class="form-section hidden">
            <div class="section-title">
                <i class="fas fa-building"></i> Thông Tin Công Ty
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Tên công ty <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Company.CompanyName, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Mã số thuế </label>
                    @Html.TextBoxFor(m => m.Company.TaxCode, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Người đại diện <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Company.Representative, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>SĐT người đại diện</label>
                    @Html.TextBoxFor(m => m.Company.RepresentativePhone, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Email công ty</label>
                    @Html.TextBoxFor(m => m.Company.Email, new { @class = "form-control", @type = "email" })
                </div>
            </div>

            <div class="form-group">
                <label>Địa chỉ công ty</label>
                @Html.TextBoxFor(m => m.Company.Address, new { @class = "form-control" })
            </div>
            <div class="room-section-container">
                <div class="room-section-title">
                    <i class="fas fa-door-open"></i>
                    <span>Chọn Phòng Cho Công Ty</span>
                    @if (ViewBag.AvailableRooms != null)
                    {
                        var roomCount = ((dynamic)ViewBag.AvailableRooms).Count;
                        <span class="room-count-badge">
                            <i class="fas fa-home"></i> @roomCount phòng có sẵn
                        </span>
                    }
                </div>

                <!-- Search và filter bar -->
                <div class="room-filter-bar">
                    <div class="search-box">
                        <i class="fas fa-search"></i>
                        <input type="text" id="roomSearchInput" placeholder="Tìm kiếm phòng..." class="form-control">
                    </div>
                    <div class="filter-buttons">
                        <button type="button" class="btn-filter active" data-filter="all">
                            Tất cả
                        </button>
                        <button type="button" class="btn-filter" data-filter="selected">
                            Đã chọn <span class="selected-count">0</span>
                        </button>
                    </div>
                </div>

                <!-- Danh sách phòng với grid layout -->
                <div class="room-selection-grid">
                    @if (ViewBag.AvailableRooms != null)
                    {
                        var roomsList = ViewBag.AvailableRooms as List<RoomSelectionModel>;
                        for (int i = 0; i < roomsList.Count; i++)
                        {
                            var room = roomsList[i];
                            <div class="room-card" data-room-id="@room.RoomId" data-index="@i" data-room-name="@room.RoomName.ToLower()">
                                <!-- Hidden inputs để giữ data -->
                                <input type="hidden" name="SelectedRooms[@i].RoomId" value="@room.RoomId" />
                                <input type="hidden" name="SelectedRooms[@i].RoomName" value="@room.RoomName" />
                                <input type="hidden" name="SelectedRooms[@i].DefaultPrice" value="@room.DefaultPrice" />

                                <!-- Room card header -->
                                <div class="room-card-header">
                                    <div class="room-checkbox-wrapper">
                                        <input type="checkbox"
                                               class="company-room-checkbox"
                                               id="company_room_@i"
                                               name="SelectedRooms[@i].IsSelected"
                                               value="true"
                                               data-room-id="@room.RoomId"
                                               data-index="@i"
                                               data-price="@room.DefaultPrice" />
                                        <input type="hidden" name="SelectedRooms[@i].IsSelected" value="false" />
                                    </div>
                                    <label for="company_room_@i" class="room-name-label">
                                        <i class="fas fa-door-closed room-icon"></i>
                                        <strong>@room.RoomName</strong>
                                    </label>
                                    <div class="room-status-badge">Trống</div>
                                </div>

                                <!-- Room details -->
                                <div class="room-card-body">
                                    <div class="room-info-row">
                                        <span class="info-label">Giá mặc định:</span>
                                        <span class="info-value default-price">@room.DefaultPrice.ToString("N0")đ</span>
                                    </div>

                                    <!-- Expandable section khi chọn phòng -->
                                    <div class="room-details-section" style="display: none;">
                                        <div class="price-input-group">
                                            <label class="input-label">
                                                <i class="fas fa-tag"></i> Giá thỏa thuận
                                            </label>

                                            <div class="custom-price-section">
                                                <div class="input-with-unit">
                                                    <input type="text"
                                                           class="form-control room-agreed-price money"
                                                           name="SelectedRooms[@i].AgreedPrice"
                                                           value="@room.DefaultPrice"
                                                           data-index="@i"
                                                           data-default-price="@room.DefaultPrice"
                                                           placeholder="Nhập giá thỏa thuận" />
                                                    <span class="unit">đ/tháng</span>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="notes-input-group">
                                            <label class="input-label">
                                                <i class="fas fa-sticky-note"></i> Ghi chú
                                            </label>
                                            <textarea class="form-control"
                                                      name="SelectedRooms[@i].Notes"
                                                      rows="2"
                                                      placeholder="Nhập ghi chú về phòng này..."></textarea>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="empty-state">
                            <i class="fas fa-home-lg-alt"></i>
                            <h4>Không có phòng trống</h4>
                            <p>Hiện tại không có phòng nào có sẵn để cho thuê</p>
                        </div>
                    }
                </div>

                <!-- Summary section -->
                <div class="company-summary-section">
                    <div class="summary-card">
                        <h5><i class="fas fa-chart-bar"></i> Tổng quan lựa chọn</h5>
                        <div class="summary-grid">
                            <div class="summary-item">
                                <div class="summary-icon">
                                    <i class="fas fa-door-open"></i>
                                </div>
                                <div class="summary-content">
                                    <span class="summary-label">Số phòng đã chọn</span>
                                    <span class="summary-value" id="totalRooms">0</span>
                                </div>
                            </div>
                            <div class="summary-item">
                                <div class="summary-icon">
                                    <i class="fas fa-money-bill-wave"></i>
                                </div>
                                <div class="summary-content">
                                    <span class="summary-label">Tổng tiền thuê/tháng</span>
                                    <span class="summary-value" id="totalRent">0đ</span>
                                </div>
                            </div>
                            <div class="summary-item">
                                <div class="summary-icon">
                                    <i class="fas fa-percentage"></i>
                                </div>
                                <div class="summary-content">
                                    <span class="summary-label">Giảm giá trung bình</span>
                                    <span class="summary-value" id="avgDiscount">0%</span>
                                </div>
                            </div>
                        </div>

                        <!-- Selected rooms list -->
                        <div class="selected-rooms-list" id="selectedRoomsList" style="display: none;">
                            <h6><i class="fas fa-list-ul"></i> Danh sách phòng đã chọn:</h6>
                            <div class="selected-rooms-container"></div>
                        </div>
                    </div>
                </div>
            </div>

        </div>

        <!-- Submit buttons -->
        <div class="form-section text-center">
            <button type="submit" class="btn btn-submit">
                <i class="fas fa-save"></i> Tạo Hợp Đồng
            </button>
            <a href="@Url.Action("Index", "Contracts")" class="btn btn-secondary" style="margin-left: 10px;">
                <i class="fas fa-times"></i> Hủy
            </a>
        </div>
    }
</div>
@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

        $(document).ready(function () {
            // Set default dates với format đúng
            var today = new Date();
            var dd = ('0' + today.getDate()).slice(-2);
            var mm = ('0' + (today.getMonth() + 1)).slice(-2);
            var yyyy = today.getFullYear();
            var formattedToday = dd + '/' + mm + '/' + yyyy;

            // Set default values cho các input rỗng
            if (!$('#StartDate').val() || $('#StartDate').val() === '') {
                $('#StartDate').datepicker('setDate', today);
            }
            // Xử lý chọn loại hợp đồng
            $('.type-card').click(function () {
                $('.type-card').removeClass('selected');
                $(this).addClass('selected');

                var type = $(this).data('type');
                $('#ContractType').val(type);

                if (type === 'Individual') {
                    $('#individualSection').removeClass('hidden');
                    $('#companySection').addClass('hidden');
                } else {
                    $('#companySection').removeClass('hidden');
                    $('#individualSection').addClass('hidden');
                }
            });

            // Validate form trước khi submit
            $('form').on('submit', function (e) {
                var contractType = $('#ContractType').val();

                if (!contractType) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'warning',
                        title: 'Chưa chọn loại hợp đồng',
                        text: 'Vui lòng chọn loại hợp đồng (Cá nhân hoặc Công ty)!',
                        confirmButtonColor: '#ffc107'
                    });
                    return false;
                }

                if (contractType === 'Individual') {
                    // Validate phòng
                    if (!$('#SingleRoomId').val()) {
                        e.preventDefault();
                        Swal.fire({
                            icon: 'warning',
                            title: 'Chưa chọn phòng',
                            text: 'Vui lòng chọn phòng cho hợp đồng!',
                            confirmButtonColor: '#ffc107'
                        });
                        return false;
                    }
                } else if (contractType === 'Company') {
                    // Validate công ty
                    if (!$('#Company_CompanyName').val()) {
                        e.preventDefault();
                        Swal.fire({
                            icon: 'warning',
                            title: 'Thiếu thông tin công ty',
                            text: 'Vui lòng nhập tên công ty!',
                            confirmButtonColor: '#ffc107'
                        });
                        return false;
                    }

                    // Validate ít nhất 1 phòng được chọn
                    var checkedRooms = $('.company-room-checkbox:checked').length;
                    if (checkedRooms === 0) {
                        e.preventDefault();
                        Swal.fire({
                            icon: 'warning',
                            title: 'Chưa chọn phòng',
                            text: 'Vui lòng chọn ít nhất một phòng cho hợp đồng công ty!',
                            confirmButtonColor: '#ffc107'
                        });
                        return false;
                    }
                }
            });

            $(document).on('change', '.company-room-checkbox', function () {
                var roomCard = $(this).closest('.room-card');
                var detailsSection = roomCard.find('.room-details-section');

                if ($(this).is(':checked')) {
                    roomCard.addClass('selected');
                    detailsSection.slideDown(300);

                    // Set giá mặc định khi chọn phòng
                    var defaultCheckbox = roomCard.find('.use-default-checkbox');
                    if (defaultCheckbox.is(':checked')) {
                        var defaultPrice = $(this).data('price');
                        roomCard.find('.room-agreed-price').val(defaultPrice);
                    }
                } else {
                    roomCard.removeClass('selected');
                    detailsSection.slideUp(300);
                }

                updateCompanySummary();
                updateSelectedRoomsList();
            });

            // Xử lý checkbox sử dụng giá mặc định
            $(document).on('change', '.use-default-checkbox', function () {
                var roomCard = $(this).closest('.room-card');
                var customPriceSection = roomCard.find('.custom-price-section');
                var priceInput = roomCard.find('.room-agreed-price');
                var defaultPrice = roomCard.find('.company-room-checkbox').data('price');

                if ($(this).is(':checked')) {
                    // Sử dụng giá mặc định
                    customPriceSection.slideUp(200);
                    priceInput.val(defaultPrice);

                    // Update label với tick xanh
                    $(this).siblings('.use-default-label').find('i')
                        .removeClass('fa-circle')
                        .addClass('fa-check-circle');
                } else {
                    // Nhập giá tùy chỉnh
                    customPriceSection.slideDown(200);

                    // Update label
                    $(this).siblings('.use-default-label').find('i')
                        .removeClass('fa-check-circle')
                        .addClass('fa-circle');
                }

                updateCompanySummary();
                updatePriceComparison(roomCard);
            });

            // Xử lý tìm kiếm phòng
            $('#roomSearchInput').on('input', function () {
                var searchTerm = $(this).val().toLowerCase();

                $('.room-card').each(function () {
                    var roomName = $(this).data('room-name');
                    if (roomName.includes(searchTerm)) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            // Xử lý filter buttons
            $('.btn-filter').on('click', function () {
                $('.btn-filter').removeClass('active');
                $(this).addClass('active');

                var filter = $(this).data('filter');

                if (filter === 'all') {
                    $('.room-card').show();
                } else if (filter === 'selected') {
                    $('.room-card').hide();
                    $('.room-card.selected').show();
                }
            });

            // Xử lý price suggestion buttons
            $(document).on('click', '.price-btn', function () {
                var roomCard = $(this).closest('.room-card');
                var priceInput = roomCard.find('.room-agreed-price');
                var defaultPrice = parseFloat(priceInput.data('default-price'));

                if ($(this).hasClass('reset-price')) {
                    priceInput.val(defaultPrice);
                } else {
                    var percent = parseFloat($(this).data('percent'));
                    var newPrice = defaultPrice * (1 + percent / 100);
                    priceInput.val(Math.round(newPrice));
                }

                formatMoneyInput(priceInput);
                updateCompanySummary();
                updatePriceComparison(roomCard);
            });

            // Format money input
            $(document).on('input', '.room-agreed-price', function () {
                formatMoneyInput($(this));
                updateCompanySummary();

                var roomCard = $(this).closest('.room-card');
                updatePriceComparison(roomCard);
            });

            function formatMoneyInput(input) {
                var value = input.val().replace(/\D/g, '');
                if (value) {
                    value = parseInt(value).toLocaleString('vi-VN');
                    input.val(value);
                }
            }

            // Update price comparison
            function updatePriceComparison(roomCard) {
                var priceInput = roomCard.find('.room-agreed-price');
                var defaultPrice = parseFloat(priceInput.data('default-price'));
                var currentPrice = parseFloat(priceInput.val().replace(/\D/g, '')) || defaultPrice;
                var index = priceInput.data('index');

                var diff = currentPrice - defaultPrice;
                var percent = defaultPrice > 0 ? (diff / defaultPrice * 100) : 0;

                var comparisonValue = roomCard.find('.comparison-value[data-index="' + index + '"]');

                if (diff === 0) {
                    comparisonValue.text('0đ (0%)');
                    comparisonValue.removeClass('discount increase');
                } else if (diff < 0) {
                    comparisonValue.text('-' + Math.abs(diff).toLocaleString('vi-VN') + 'đ (' + percent.toFixed(1) + '%)');
                    comparisonValue.addClass('discount').removeClass('increase');
                } else {
                    comparisonValue.text('+' + diff.toLocaleString('vi-VN') + 'đ (+' + percent.toFixed(1) + '%)');
                    comparisonValue.addClass('increase').removeClass('discount');
                }
            }

            // Update summary
            function updateCompanySummary() {
                var totalRooms = 0;
                var totalRent = 0;
                var totalDefault = 0;

                $('.company-room-checkbox:checked').each(function () {
                    totalRooms++;
                    var roomCard = $(this).closest('.room-card');
                    var priceInput = roomCard.find('.room-agreed-price');
                    var useDefault = roomCard.find('.use-default-checkbox').is(':checked');

                    var defaultPrice = parseFloat($(this).data('price')) || 0;
                    var agreedPrice = useDefault ? defaultPrice :
                        (parseFloat(priceInput.val().replace(/\D/g, '')) || defaultPrice);

                    totalRent += agreedPrice;
                    totalDefault += defaultPrice;
                });

                var avgDiscount = totalDefault > 0 ?
                    Math.round((totalDefault - totalRent) / totalDefault * 100) : 0;

                $('#totalRooms').text(totalRooms);
                $('#totalRent').text(totalRent.toLocaleString('vi-VN') + 'đ');

                // Hiển thị discount hoặc increase
                if (avgDiscount > 0) {
                    $('#avgDiscount').text('-' + Math.abs(avgDiscount) + '%').css('color', '#28a745');
                } else if (avgDiscount < 0) {
                    $('#avgDiscount').text('+' + Math.abs(avgDiscount) + '%').css('color', '#dc3545');
                } else {
                    $('#avgDiscount').text('0%').css('color', '#495057');
                }

                // Update selected count in filter button
                $('.btn-filter[data-filter="selected"] .selected-count').text(totalRooms);

                // Show/hide selected rooms list
                if (totalRooms > 0) {
                    $('#selectedRoomsList').show();
                } else {
                    $('#selectedRoomsList').hide();
                }
            }

            // Update selected rooms list
            function updateSelectedRoomsList() {
                var container = $('.selected-rooms-container');
                container.empty();

                $('.company-room-checkbox:checked').each(function () {
                    var roomCard = $(this).closest('.room-card');
                    var roomName = roomCard.find('.room-name-label strong').text();
                    var roomId = $(this).data('room-id');
                    var useDefault = roomCard.find('.use-default-checkbox').is(':checked');
                    var priceInput = roomCard.find('.room-agreed-price');
                    var price = useDefault ? $(this).data('price') :
                        (parseFloat(priceInput.val().replace(/\D/g, '')) || $(this).data('price'));

                    var priceText = price.toLocaleString('vi-VN') + 'đ';
                    var priceLabel = useDefault ? ' (Giá mặc định)' : '';

                    var tag = $('<div class="selected-room-tag">' +
                        '<span>' + roomName + ' - ' + priceText + priceLabel + '</span>' +
                        '<button type="button" class="remove-btn" data-room-id="' + roomId + '">×</button>' +
                        '</div>');

                    container.append(tag);
                });
            }

            // Handle remove room from selected list
            $(document).on('click', '.selected-room-tag .remove-btn', function () {
                var roomId = $(this).data('room-id');
                var checkbox = $('.company-room-checkbox[data-room-id="' + roomId + '"]');
                checkbox.prop('checked', false).trigger('change');
            });

            // Initialize on load
            updateCompanySummary();
        });
    </script>
}