@model NhaTroAnCu.Models.ContractCreateViewModel
@{
    ViewBag.Title = "Tạo hợp đồng mới";
    var availableRooms = ViewBag.AvailableRooms as List<NhaTroAnCu.Models.RoomSelectionModel> ?? new List<NhaTroAnCu.Models.RoomSelectionModel>();
}

<style>
    .contract-form-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
    }

    .form-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        border-radius: 15px 15px 0 0;
        margin: -20px -20px 0 -20px;
    }

    .form-section {
        background: white;
        padding: 30px;
        margin-bottom: 20px;
        border-radius: 10px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
    }

    .section-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid #667eea;
    }

    .contract-type-selector {
        display: flex;
        gap: 20px;
        margin-bottom: 30px;
    }

    .type-card {
        flex: 1;
        padding: 20px;
        border: 2px solid #e9ecef;
        border-radius: 10px;
        cursor: pointer;
        transition: all 0.3s;
        text-align: center;
    }

        .type-card:hover {
            border-color: #667eea;
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .type-card.selected {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-color: #667eea;
        }

        .type-card i {
            font-size: 3rem;
            margin-bottom: 10px;
        }

        .type-card h4 {
            margin: 10px 0 5px 0;
        }

    .room-selection-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 15px;
        margin-top: 20px;
    }

    .room-checkbox-card {
        border: 2px solid #e9ecef;
        border-radius: 8px;
        padding: 15px;
        transition: all 0.3s;
        cursor: pointer;
    }

        .room-checkbox-card:hover {
            border-color: #667eea;
            background: #f8f9fa;
        }

        .room-checkbox-card.selected {
            background: #e3f2fd;
            border-color: #2196f3;
        }

        .room-checkbox-card input[type="checkbox"] {
            margin-right: 10px;
        }

    .room-price-input {
        margin-top: 10px;
        width: 100%;
    }

    .form-row {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 20px;
    }

    .btn-submit {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 12px 40px;
        border: none;
        border-radius: 25px;
        font-size: 1.1rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s;
    }

        .btn-submit:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
        }

    .hidden {
        display: none;
    }

    .summary-box {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 10px;
        margin-top: 20px;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        padding: 10px 0;
        border-bottom: 1px solid #dee2e6;
    }

    .summary-total {
        font-size: 1.5rem;
        font-weight: 700;
        color: #667eea;
        padding-top: 10px;
    }
</style>

<div class="contract-form-container">
    <div class="form-header">
        <h2><i class="fas fa-file-contract"></i> Tạo Hợp Đồng Thuê Nhà</h2>
        <p>Vui lòng chọn loại khách hàng và điền đầy đủ thông tin</p>
    </div>

    @using (Html.BeginForm("Create", "Contracts", FormMethod.Post, new { @class = "contract-form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Chọn loại hợp đồng -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-users"></i> Loại Khách Hàng
            </div>

            <div class="contract-type-selector">
                <div class="type-card" data-type="Individual">
                    <i class="fas fa-user"></i>
                    <h4>Khách Hàng Cá Nhân</h4>
                    <p>Thuê cho cá nhân/hộ gia đình</p>
                </div>
                <div class="type-card" data-type="Company">
                    <i class="fas fa-building"></i>
                    <h4>Khách Hàng Công Ty</h4>
                    <p>Thuê cho doanh nghiệp/tổ chức</p>
                </div>
            </div>

            @Html.HiddenFor(m => m.ContractType, new { @id = "ContractType" })
        </div>

        <!-- Thông tin chung -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-info-circle"></i> Thông Tin Hợp Đồng
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Ngày bắt đầu <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Số tháng thuê <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Months, new { @class = "form-control", @type = "number", @min = "1", @max = "120" })
                    @Html.ValidationMessageFor(m => m.Months, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Ngày chuyển vào <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.MoveInDate, new { @class = "form-control", @type = "date" })
                    @Html.ValidationMessageFor(m => m.MoveInDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Giá điện (đ/kWh) <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.ElectricityPrice, new { @class = "form-control", @type = "number", @step = "100" })
                    @Html.ValidationMessageFor(m => m.ElectricityPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Giá nước (đ/m³) <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.WaterPrice, new { @class = "form-control", @type = "number", @step = "1000" })
                    @Html.ValidationMessageFor(m => m.WaterPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Tiền cọc</label>
                    @Html.TextBoxFor(m => m.DepositAmount, new { @class = "form-control", @type = "number", @step = "100000" })
                </div>
            </div>

            <div class="form-group">
                <label>Ghi chú</label>
                @Html.TextAreaFor(m => m.Note, new { @class = "form-control", @rows = "3" })
            </div>
        </div>

        <!-- Section cho khách hàng cá nhân -->
        <div id="individualSection" class="form-section hidden">
            <div class="section-title">
                <i class="fas fa-user"></i> Thông Tin Người Thuê
            </div>

            <!-- Phần upload và quét CCCD -->
            <div class="scan-section" style="background: #f0f8ff; padding: 20px; border-radius: 10px; margin-bottom: 20px;">
                <h5 style="color: #2c3e50; margin-bottom: 15px;">
                    <i class="fas fa-id-card"></i> Quét thông tin từ CCCD/CMND
                </h5>

                <div class="form-group">
                    <label>Upload ảnh CCCD/CMND để tự động điền thông tin</label>
                    <input type="file" id="cccdFile" class="form-control" accept="image/*" />
                    <small class="form-text text-muted">
                        Hỗ trợ định dạng: JPG, PNG, GIF. Hệ thống sẽ tự động nhận diện và điền thông tin.
                    </small>
                </div>

                <button type="button" id="btnScanCCCD" class="btn btn-primary">
                    <i class="fas fa-qrcode"></i> Quét thông tin CCCD
                </button>

                <div id="scanResult" class="scan-result hidden" style="margin-top: 15px;">
                    <!-- Kết quả quét sẽ hiển thị ở đây -->
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Họ và tên <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.IndividualTenant.FullName, new { @class = "form-control", @id = "tenantFullName" })
                </div>

                <div class="form-group">
                    <label>Số CCCD/CMND <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.IndividualTenant.IdentityCard, new { @class = "form-control", @id = "tenantIdentityCard" })
                </div>

                <div class="form-group">
                    <label>Số điện thoại</label>
                    @Html.TextBoxFor(m => m.IndividualTenant.PhoneNumber, new { @class = "form-control", @id = "tenantPhoneNumber" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Ngày sinh</label>
                    @Html.TextBoxFor(m => m.IndividualTenant.BirthDate, new { @class = "form-control", @type = "date", @id = "tenantBirthDate" })
                </div>

                <div class="form-group">
                    <label>Giới tính</label>
                    @Html.DropDownListFor(m => m.IndividualTenant.Gender,
                        new SelectList(new[] {
                            new { Value = "Nam", Text = "Nam" },
                            new { Value = "Nữ", Text = "Nữ" },
                            new { Value = "Khác", Text = "Khác" }
                        }, "Value", "Text"),
                        "-- Chọn --",
                        new { @class = "form-control", @id = "tenantGender" })
                </div>

                <div class="form-group">
                    <label>Dân tộc</label>
                    @Html.TextBoxFor(m => m.IndividualTenant.Ethnicity, new { @class = "form-control", @id = "tenantEthnicity" })
                </div>
            </div>

            <div class="form-group">
                <label>Địa chỉ thường trú</label>
                @Html.TextBoxFor(m => m.IndividualTenant.PermanentAddress, new { @class = "form-control", @id = "tenantAddress" })
            </div>

            <div class="form-group">
                <label>Biển số xe</label>
                @Html.TextBoxFor(m => m.IndividualTenant.VehiclePlate, new { @class = "form-control" })
            </div>

            <!-- Chọn phòng cho cá nhân -->
            <div class="form-group">
                <label>Chọn phòng <span class="text-danger">*</span></label>
                <select name="SingleRoomId" id="singleRoomSelect" class="form-control">
                    <option value="">-- Chọn phòng --</option>
                    @foreach (var room in availableRooms)
                    {
                        <option value="@room.RoomId" data-price="@room.DefaultPrice">
                            @room.RoomName - Giá: @room.DefaultPrice.ToString("N0")đ
                        </option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label>Giá thuê thỏa thuận</label>
                @Html.TextBoxFor(m => m.SingleRoomPrice, new { @class = "form-control", @type = "number", @step = "100000" })
            </div>
        </div>

        <!-- Section cho khách hàng công ty -->
        <div id="companySection" class="form-section hidden">
            <div class="section-title">
                <i class="fas fa-building"></i> Thông Tin Công Ty
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Tên công ty <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Company.CompanyName, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Mã số thuế <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Company.TaxCode, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Người đại diện <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Company.Representative, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>SĐT người đại diện</label>
                    @Html.TextBoxFor(m => m.Company.RepresentativePhone, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Email công ty</label>
                    @Html.TextBoxFor(m => m.Company.Email, new { @class = "form-control", @type = "email" })
                </div>
            </div>

            <div class="form-group">
                <label>Địa chỉ công ty</label>
                @Html.TextBoxFor(m => m.Company.Address, new { @class = "form-control" })
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Số tài khoản ngân hàng</label>
                    @Html.TextBoxFor(m => m.Company.BankAccount, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Tên ngân hàng</label>
                    @Html.TextBoxFor(m => m.Company.BankName, new { @class = "form-control" })
                </div>
            </div>

            <!-- Chọn nhiều phòng cho công ty -->
            <div class="section-title" style="margin-top: 30px;">
                <i class="fas fa-door-open"></i> Chọn Phòng Thuê
            </div>

            <div class="room-selection-grid">
                @for (int i = 0; i < availableRooms.Count; i++)
                {
                    var room = availableRooms[i];
                    <div class="room-checkbox-card" data-room-id="@room.RoomId">
                        <div class="form-check">
                            <input type="checkbox"
                                   class="form-check-input room-checkbox"
                                   name="SelectedRooms[@i].IsSelected"
                                   value="true"
                                   data-room-id="@room.RoomId"
                                   data-default-price="@room.DefaultPrice" />
                            <input type="hidden" name="SelectedRooms[@i].IsSelected" value="false" />
                            <input type="hidden" name="SelectedRooms[@i].RoomId" value="@room.RoomId" />
                            <input type="hidden" name="SelectedRooms[@i].RoomName" value="@room.RoomName" />
                            <input type="hidden" name="SelectedRooms[@i].DefaultPrice" value="@room.DefaultPrice" />

                            <label class="form-check-label">
                                <strong>@room.RoomName</strong><br />
                                <small>Giá gốc: @room.DefaultPrice.ToString("N0")đ</small>
                            </label>
                        </div>

                        <div class="room-price-input hidden">
                            <label>Giá thỏa thuận:</label>
                            <input type="number"
                                   name="SelectedRooms[@i].AgreedPrice"
                                   class="form-control agreed-price-input"
                                   value="@room.DefaultPrice"
                                   step="100000" />
                        </div>
                    </div>
                }
            </div>

            <!-- Tổng kết -->
            <div class="summary-box">
                <h5>Tổng kết</h5>
                <div class="summary-row">
                    <span>Số phòng đã chọn:</span>
                    <span id="totalRooms">0</span>
                </div>
                <div class="summary-row">
                    <span>Tổng tiền thuê/tháng:</span>
                    <span id="totalRent">0đ</span>
                </div>
                <div class="summary-row summary-total">
                    <span>Tiền cọc dự kiến (1 tháng):</span>
                    <span id="depositAmount">0đ</span>
                </div>
            </div>
        </div>

        <!-- Submit buttons -->
        <div class="form-section text-center">
            <button type="submit" class="btn btn-submit">
                <i class="fas fa-save"></i> Tạo Hợp Đồng
            </button>
            <a href="@Url.Action("Index", "Contracts")" class="btn btn-secondary" style="margin-left: 10px;">
                <i class="fas fa-times"></i> Hủy
            </a>
        </div>
    }
</div>

@section Scripts {
    <script>
    $(document).ready(function() {
        // Xử lý chọn loại hợp đồng
        $('.type-card').click(function() {
            $('.type-card').removeClass('selected');
            $(this).addClass('selected');

            var type = $(this).data('type');
            $('#ContractType').val(type);

            if (type === 'Individual') {
                $('#individualSection').removeClass('hidden');
                $('#companySection').addClass('hidden');
            } else {
                $('#companySection').removeClass('hidden');
                $('#individualSection').addClass('hidden');
            }
        });

        // Xử lý quét CCCD cho khách hàng cá nhân
        $('#btnScanCCCD').click(function() {
            var fileInput = document.getElementById('cccdFile');
            if (!fileInput.files || !fileInput.files[0]) {
                alert('Vui lòng chọn file ảnh CCCD!');
                return;
            }

            var formData = new FormData();
            formData.append('image', fileInput.files[0]);

            // Hiển thị loading
            $('#btnScanCCCD').prop('disabled', true).html('<i class="fas fa-spinner fa-spin"></i> Đang quét...');
            $('#scanResult').removeClass('hidden success partial error').html('Đang xử lý ảnh...');

            // Gọi API quét CCCD
            $.ajax({
                url: '@Url.Action("ScanCCCD", "FPTReader")',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    $('#btnScanCCCD').prop('disabled', false).html('<i class="fas fa-qrcode"></i> Quét thông tin CCCD');

                    if (response.success) {
                        // Điền thông tin vào form
                        if (response.data.name) $('#tenantFullName').val(response.data.name);
                        if (response.data.id) $('#tenantIdentityCard').val(response.data.id);
                        if (response.data.dob) {
                            // Convert định dạng ngày từ dd/MM/yyyy sang yyyy-MM-dd cho input date
                            var parts = response.data.dob.split('/');
                            if (parts.length === 3) {
                                var formattedDate = parts[2] + '-' + parts[1].padStart(2, '0') + '-' + parts[0].padStart(2, '0');
                                $('#tenantBirthDate').val(formattedDate);
                            }
                        }
                        if (response.data.sex) $('#tenantGender').val(response.data.sex);
                        if (response.data.home) $('#tenantAddress').val(response.data.home);
                        if (response.data.ethnicity) $('#tenantEthnicity').val(response.data.ethnicity);

                        $('#scanResult').addClass('success').html(
                            '<i class="fas fa-check-circle"></i> Quét thành công! Thông tin đã được điền vào form.'
                        );
                    } else if (response.data) {
                        // Quét thành công một phần
                        var fieldsFound = [];
                        if (response.data.name) fieldsFound.push('Họ tên');
                        if (response.data.id) fieldsFound.push('Số CCCD');
                        if (response.data.dob) fieldsFound.push('Ngày sinh');
                        if (response.data.home) fieldsFound.push('Địa chỉ');

                        $('#scanResult').addClass('partial').html(
                            '<i class="fas fa-info-circle"></i> Đã nhận diện được: ' + fieldsFound.join(', ') +
                            '. Vui lòng kiểm tra và bổ sung thông tin còn thiếu.'
                        );
                    } else {
                        $('#scanResult').addClass('error').html(
                            '<i class="fas fa-exclamation-triangle"></i> Không thể nhận diện thông tin. Vui lòng nhập thủ công.'
                        );
                    }
                },
                error: function() {
                    $('#btnScanCCCD').prop('disabled', false).html('<i class="fas fa-qrcode"></i> Quét thông tin CCCD');
                    $('#scanResult').addClass('error').html(
                        '<i class="fas fa-exclamation-triangle"></i> Lỗi kết nối. Vui lòng thử lại sau.'
                    );
                }
            });
        });

        // Xử lý chọn phòng cho cá nhân
        $('#singleRoomSelect').change(function() {
            var price = $(this).find(':selected').data('price');
            $('#SingleRoomPrice').val(price);
        });

        // Xử lý chọn phòng cho công ty
        $('.room-checkbox').change(function() {
            var card = $(this).closest('.room-checkbox-card');
            var priceInput = card.find('.room-price-input');

            if ($(this).is(':checked')) {
                card.addClass('selected');
                priceInput.removeClass('hidden');
            } else {
                card.removeClass('selected');
                priceInput.addClass('hidden');
            }

            updateCompanySummary();
        });

        // Cập nhật tổng kết khi thay đổi giá
        $('.agreed-price-input').on('input', function() {
            updateCompanySummary();
        });

        function updateCompanySummary() {
            var totalRooms = 0;
            var totalRent = 0;

            $('.room-checkbox:checked').each(function() {
                totalRooms++;
                var card = $(this).closest('.room-checkbox-card');
                var price = parseFloat(card.find('.agreed-price-input').val()) || 0;
                totalRent += price;
            });

            $('#totalRooms').text(totalRooms);
            $('#totalRent').text(totalRent.toLocaleString('vi-VN') + 'đ');
            $('#depositAmount').text(totalRent.toLocaleString('vi-VN') + 'đ');

            // Cập nhật hidden field tiền cọc
            if (totalRent > 0) {
                $('#DepositAmount').val(totalRent);
            }
        }

        // Validation trước khi submit
        $('form').submit(function(e) {
            var contractType = $('#ContractType').val();

            if (!contractType) {
                alert('Vui lòng chọn loại khách hàng');
                e.preventDefault();
                return false;
            }

            if (contractType === 'Individual') {
                if (!$('#singleRoomSelect').val()) {
                    alert('Vui lòng chọn phòng');
                    e.preventDefault();
                    return false;
                }
            } else {
                if ($('.room-checkbox:checked').length === 0) {
                    alert('Vui lòng chọn ít nhất một phòng');
                    e.preventDefault();
                    return false;
                }
            }
        });
    });
    </script>
}