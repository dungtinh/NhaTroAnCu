@model NhaTroAnCu.Models.ContractCreateViewModel
@using NhaTroAnCu.Models
@{
    ViewBag.Title = "Tạo Hợp Đồng Mới";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/CSS/contract-action.css" rel="stylesheet" />

<div class="contract-form-container">
    <div class="form-header">
        <h2><i class="fas fa-file-contract"></i> Tạo Hợp Đồng Thuê Nhà</h2>
        <p>Vui lòng chọn loại khách hàng và điền đầy đủ thông tin</p>
    </div>

    @using (Html.BeginForm("Create", "Contracts", FormMethod.Post, new { @class = "contract-form", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <!-- Chọn loại hợp đồng -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-users"></i> Loại Khách Hàng
            </div>

            <div class="contract-type-selector">
                <div class="type-card" data-type="Individual">
                    <i class="fas fa-user"></i>
                    <h4>Khách Hàng Cá Nhân</h4>
                    <p>Thuê cho cá nhân/hộ gia đình</p>
                </div>
                <div class="type-card" data-type="Company">
                    <i class="fas fa-building"></i>
                    <h4>Khách Hàng Công Ty</h4>
                    <p>Thuê cho doanh nghiệp/tổ chức</p>
                </div>
            </div>

            @Html.HiddenFor(m => m.ContractType, new { @id = "ContractType" })
        </div>

        <!-- Thông tin chung -->
        <div class="form-section">
            <div class="section-title">
                <i class="fas fa-info-circle"></i> Thông Tin Hợp Đồng
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Ngày bắt đầu <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.StartDate, "{0:dd/MM/yyyy}", new { @class = "form-control datetime", @placeholder = "dd/MM/yyyy" })
                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Số tháng thuê <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Months, new { @class = "form-control", @type = "number", @min = "1", @max = "120" })
                    @Html.ValidationMessageFor(m => m.Months, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Ngày chuyển vào <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.MoveInDate, "{0:dd/MM/yyyy}", new { @class = "form-control datetime", @placeholder = "dd/MM/yyyy" })
                    @Html.ValidationMessageFor(m => m.MoveInDate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-row">
                <div class="form-group">
                    <label>Giá điện (đ/kWh) <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.ElectricityPrice, new { @class = "form-control money", @step = "100" })
                    @Html.ValidationMessageFor(m => m.ElectricityPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <label>Giá nước (đ/m³) <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.WaterPrice, new { @class = "form-control money", @step = "1000" })
                    @Html.ValidationMessageFor(m => m.WaterPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label>Ghi chú</label>
                @Html.TextAreaFor(m => m.Note, new { @class = "form-control", @rows = "3" })
            </div>
        </div>

        <!-- Section cho khách hàng cá nhân -->
        <div id="individualSection" class="form-section hidden">
            <!-- Chọn phòng cho hợp đồng cá nhân -->
            <div class="section-title" style="margin-top: 30px;">
                <i class="fas fa-door-open"></i> Chọn Phòng
            </div>

            <div class="form-group">
                <label>Chọn phòng <span class="text-danger">*</span></label>
                @Html.DropDownListFor(m => m.SingleRoomId,
                    new SelectList(ViewBag.AvailableRooms ?? new List<SelectListItem>(), "RoomId", "RoomName"),
                    "-- Chọn phòng --",
                    new { @class = "form-control" })
            </div>

            <div class="form-group">
                <label>Giá thuê (đ/tháng)</label>
                @Html.TextBoxFor(m => m.SingleRoomPrice, new { @class = "form-control money", @id = "singleRoomPrice" })
                <small class="form-text text-muted">Để trống sẽ lấy giá mặc định của phòng</small>
            </div>
        </div>

        <!-- Section cho khách hàng công ty (giữ nguyên) -->
        <div id="companySection" class="form-section hidden">
            <div class="section-title">
                <i class="fas fa-building"></i> Thông Tin Công Ty
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Tên công ty <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Company.CompanyName, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Mã số thuế <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Company.TaxCode, new { @class = "form-control" })
                </div>
            </div>

            <div class="form-row">
                <div class="form-group">
                    <label>Người đại diện <span class="text-danger">*</span></label>
                    @Html.TextBoxFor(m => m.Company.Representative, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>SĐT người đại diện</label>
                    @Html.TextBoxFor(m => m.Company.RepresentativePhone, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>Email công ty</label>
                    @Html.TextBoxFor(m => m.Company.Email, new { @class = "form-control", @type = "email" })
                </div>
            </div>

            <div class="form-group">
                <label>Địa chỉ công ty</label>
                @Html.TextBoxFor(m => m.Company.Address, new { @class = "form-control" })
            </div>
            <div class="room-section-title">
                <i class="fas fa-door-open"></i>
                Chọn Phòng Cho Công Ty
                @if (ViewBag.AvailableRooms != null)
                {
                    var roomCount = ((dynamic)ViewBag.AvailableRooms).Count;
                    <span class="room-count-badge">@roomCount phòng trống</span>
                }
            </div>

            <div class="room-selection-list">
                @if (ViewBag.AvailableRooms != null)
                {
                    var roomsList = ViewBag.AvailableRooms as List<RoomSelectionModel>;
                    for (int i = 0; i < roomsList.Count; i++)
                    {
                        var room = roomsList[i];
                        <div class="room-selection-item" data-room-id="@room.RoomId" data-index="@i">
                            <div class="form-check">
                                <!-- Hidden inputs để giữ data -->
                                <input type="hidden" name="SelectedRooms[@i].RoomId" value="@room.RoomId" />
                                <input type="hidden" name="SelectedRooms[@i].RoomName" value="@room.RoomName" />
                                <input type="hidden" name="SelectedRooms[@i].DefaultPrice" value="@room.DefaultPrice" />

                                <!-- Checkbox với name đúng format -->
                                <input type="checkbox"
                                       class="company-room-checkbox"
                                       id="company_room_@i"
                                       name="SelectedRooms[@i].IsSelected"
                                       value="true"
                                       data-room-id="@room.RoomId"
                                       data-index="@i"
                                       data-price="@room.DefaultPrice" />

                                <!-- Hidden input for false value -->
                                <input type="hidden"
                                       name="SelectedRooms[@i].IsSelected"
                                       value="false" />

                                <label class="room-check-label" for="company_room_@i">
                                    <strong>@room.RoomName</strong>
                                    <span class="room-price-badge">@room.DefaultPrice.ToString("N0")đ/tháng</span>
                                </label>
                            </div>

                            <div class="room-price-input" style="display: none;">
                                <label>Giá thỏa thuận (đ/tháng)</label>
                                <input class="form-control room-agreed-price money"
                                       name="SelectedRooms[@i].AgreedPrice"
                                       value="@room.DefaultPrice"
                                       data-index="@i"
                                       placeholder="Nhập giá thỏa thuận" />

                                <!-- Notes field -->
                                <input type="text"
                                       class="form-control mt-2"
                                       name="SelectedRooms[@i].Notes"
                                       placeholder="Ghi chú (tùy chọn)" />
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted" style="text-align: center; padding: 40px; color: #6c757d; font-style: italic;">
                        <i class="fas fa-home" style="font-size: 48px; color: #dee2e6; display: block; margin-bottom: 15px;"></i>
                        Không có phòng trống
                    </p>
                }
            </div>

            <!-- Tổng kết cho công ty -->
            <div class="company-summary-box">
                <h5><i class="fas fa-calculator"></i> Tổng kết</h5>
                <div class="summary-row">
                    <span>Số phòng đã chọn:</span>
                    <span id="totalRooms">0</span>
                </div>
                <div class="summary-row">
                    <span>Tổng tiền thuê/tháng:</span>
                    <span id="totalRent">0đ</span>
                </div>
            </div>
        </div>

        <!-- Submit buttons -->
        <div class="form-section text-center">
            <button type="submit" class="btn btn-submit">
                <i class="fas fa-save"></i> Tạo Hợp Đồng
            </button>
            <a href="@Url.Action("Index", "Contracts")" class="btn btn-secondary" style="margin-left: 10px;">
                <i class="fas fa-times"></i> Hủy
            </a>
        </div>
    }
</div>
@section Scripts {

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>

        $(document).ready(function () {
            // Set default dates với format đúng
            var today = new Date();
            var dd = ('0' + today.getDate()).slice(-2);
            var mm = ('0' + (today.getMonth() + 1)).slice(-2);
            var yyyy = today.getFullYear();
            var formattedToday = dd + '/' + mm + '/' + yyyy;

            // Set default values cho các input rỗng
            if (!$('#StartDate').val() || $('#StartDate').val() === '') {
                $('#StartDate').datepicker('setDate', today);
            }
            // Xử lý chọn loại hợp đồng
            $('.type-card').click(function () {
                $('.type-card').removeClass('selected');
                $(this).addClass('selected');

                var type = $(this).data('type');
                $('#ContractType').val(type);

                if (type === 'Individual') {
                    $('#individualSection').removeClass('hidden');
                    $('#companySection').addClass('hidden');
                } else {
                    $('#companySection').removeClass('hidden');
                    $('#individualSection').addClass('hidden');
                }
            });

            // Validate form trước khi submit
            $('form').on('submit', function (e) {
                var contractType = $('#ContractType').val();

                if (!contractType) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'warning',
                        title: 'Chưa chọn loại hợp đồng',
                        text: 'Vui lòng chọn loại hợp đồng (Cá nhân hoặc Công ty)!',
                        confirmButtonColor: '#ffc107'
                    });
                    return false;
                }

                if (contractType === 'Individual') {
                    // Validate phòng
                    if (!$('#SingleRoomId').val()) {
                        e.preventDefault();
                        Swal.fire({
                            icon: 'warning',
                            title: 'Chưa chọn phòng',
                            text: 'Vui lòng chọn phòng cho hợp đồng!',
                            confirmButtonColor: '#ffc107'
                        });
                        return false;
                    }
                } else if (contractType === 'Company') {
                    // Validate công ty
                    if (!$('#Company_CompanyName').val() || !$('#Company_TaxCode').val()) {
                        e.preventDefault();
                        Swal.fire({
                            icon: 'warning',
                            title: 'Thiếu thông tin công ty',
                            text: 'Vui lòng nhập tên công ty và mã số thuế!',
                            confirmButtonColor: '#ffc107'
                        });
                        return false;
                    }

                    // Validate ít nhất 1 phòng được chọn
                    var checkedRooms = $('.company-room-checkbox:checked').length;
                    if (checkedRooms === 0) {
                        e.preventDefault();
                        Swal.fire({
                            icon: 'warning',
                            title: 'Chưa chọn phòng',
                            text: 'Vui lòng chọn ít nhất một phòng cho hợp đồng công ty!',
                            confirmButtonColor: '#ffc107'
                        });
                        return false;
                    }
                }
            });

            // Xử lý chọn phòng cho công ty
            $(document).on('change', '.company-room-checkbox', function () {
                updateCompanySummary();
            });

            $(document).on('input', '.room-agreed-price', function () {
                updateCompanySummary();
            });

            // Hàm cập nhật tổng kết cho công ty
            function updateCompanySummary() {
                var totalRooms = 0;
                var totalRent = 0;

                $('.company-room-checkbox:checked').each(function () {
                    totalRooms++;
                    var item = $(this).closest('.room-selection-item');
                    var price = parseFloat(item.find('.room-agreed-price').val().replace(/\./g, '')) || 0;
                    totalRent += price;
                });

                $('#totalRooms').text(totalRooms);
                $('#totalRent').text(totalRent.toLocaleString('vi-VN') + 'đ');
            }
        });
    </script>
}